# This file is automatically generated by `./configs/benchmarks/point_cloud_registration/gen.py`.
# Please do not attempt to modify manually.
import torch
import criteria
import metrics
import optimizers
import runners.pcr_trainers

import copy
from configs.common.datasets.point_cloud_registration.train.buffer_data_cfg import get_transforms_cfg
from configs.common.datasets.point_cloud_registration.train.buffer_data_cfg import data_cfg as train_data_cfg
from configs.common.datasets.point_cloud_registration.val.buffer_data_cfg import data_cfg as val_data_cfg
from configs.common.models.point_cloud_registration.buffer_cfg import model_cfg

optimizer_cfg = {
    'class': optimizers.SingleTaskOptimizer,
    'args': {
        'optimizer_config': {
            'class': torch.optim.Adam,
            'args': {
                'params': None,
                'lr': 1.0e-4,
                'weight_decay': 1.0e-06,
            },
        },
    },
}

scheduler_cfg = {
    'class': torch.optim.lr_scheduler.StepLR,
    'args': {
        'optimizer': None,
        'step_size': 1000,
        'gamma': 0.95,
    },
}

config = [
{
    'stage': 'Ref',
    'runner': runners.pcr_trainers.BufferTrainer,
    'work_dir': None,
    'epochs': 100,
    # seeds
    'init_seed': None,
    'train_seeds': None,
    # dataset config
    'train_dataset': copy.deepcopy(train_data_cfg['train_dataset']),
    'train_dataloader': copy.deepcopy(train_data_cfg['train_dataloader']),
    'criterion': {
        'class': criteria.vision_3d.point_cloud_registration.BUFFER_RefStageCriterion,
        'args': {},
    },
    'val_dataset': copy.deepcopy(val_data_cfg['val_dataset']),
    'val_dataloader': copy.deepcopy(val_data_cfg['val_dataloader']),
    'test_dataset': None,
    'test_dataloader': None,
    'metric': {
        'class': metrics.vision_3d.point_cloud_registration.BUFFER_RefStageMetric,
        'args': {},
    },
    # model config
    'model': copy.deepcopy(model_cfg),
    # optimizer config
    'optimizer': copy.deepcopy(optimizer_cfg),
    # scheduler config
    'scheduler': copy.deepcopy(scheduler_cfg),
},
{
    'stage': 'Desc',
    'runner': runners.pcr_trainers.BufferTrainer,
    'work_dir': None,
    'epochs': 100,
    # seeds
    'init_seed': None,
    'train_seeds': None,
    # dataset config
    'train_dataset': copy.deepcopy(train_data_cfg['train_dataset']),
    'train_dataloader': copy.deepcopy(train_data_cfg['train_dataloader']),
    'criterion': {
        'class': criteria.vision_3d.point_cloud_registration.BUFFER_DescStageCriterion,
        'args': {},
    },
    'val_dataset': copy.deepcopy(val_data_cfg['val_dataset']),
    'val_dataloader': copy.deepcopy(val_data_cfg['val_dataloader']),
    'test_dataset': None,
    'test_dataloader': None,
    'metric': {
        'class': metrics.vision_3d.point_cloud_registration.BUFFER_DescStageMetric,
        'args': {},
    },
    # model config
    'model': copy.deepcopy(model_cfg),
    # optimizer config
    'optimizer': copy.deepcopy(optimizer_cfg),
    # scheduler config
    'scheduler': copy.deepcopy(scheduler_cfg),
},
{
    'stage': 'Keypt',
    'runner': runners.pcr_trainers.BufferTrainer,
    'work_dir': None,
    'epochs': 100,
    # seeds
    'init_seed': None,
    'train_seeds': None,
    # dataset config
    'train_dataset': copy.deepcopy(train_data_cfg['train_dataset']),
    'train_dataloader': copy.deepcopy(train_data_cfg['train_dataloader']),
    'criterion': {
        'class': criteria.vision_3d.point_cloud_registration.BUFFER_KeyptStageCriterion,
        'args': {},
    },
    'val_dataset': copy.deepcopy(val_data_cfg['val_dataset']),
    'val_dataloader': copy.deepcopy(val_data_cfg['val_dataloader']),
    'test_dataset': None,
    'test_dataloader': None,
    'metric': {
        'class': metrics.vision_3d.point_cloud_registration.BUFFER_KeyptStageMetric,
        'args': {},
    },
    # model config
    'model': copy.deepcopy(model_cfg),
    # optimizer config
    'optimizer': copy.deepcopy(optimizer_cfg),
    # scheduler config
    'scheduler': copy.deepcopy(scheduler_cfg),
},
{
    'stage': 'Inlier',
    'runner': runners.pcr_trainers.BufferTrainer,
    'work_dir': None,
    'epochs': 100,
    # seeds
    'init_seed': None,
    'train_seeds': None,
    # dataset config
    'train_dataset': copy.deepcopy(train_data_cfg['train_dataset']),
    'train_dataloader': copy.deepcopy(train_data_cfg['train_dataloader']),
    'criterion': {
        'class': criteria.vision_3d.point_cloud_registration.BUFFER_InlierStageCriterion,
        'args': {},
    },
    'val_dataset': copy.deepcopy(val_data_cfg['val_dataset']),
    'val_dataloader': copy.deepcopy(val_data_cfg['val_dataloader']),
    'test_dataset': None,
    'test_dataloader': None,
    'metric': {
        'class': metrics.vision_3d.point_cloud_registration.BUFFER_InlierStageMetric,
        'args': {},
    },
    # model config
    'model': copy.deepcopy(model_cfg),
    # optimizer config
    'optimizer': copy.deepcopy(optimizer_cfg),
    # scheduler config
    'scheduler': copy.deepcopy(scheduler_cfg),
},
]

config[0]['train_dataset']['args']['transforms_cfg'] = get_transforms_cfg('Euler', 3)
config[1]['train_dataset']['args']['transforms_cfg'] = get_transforms_cfg('Euler', 1)
config[2]['train_dataset']['args']['transforms_cfg'] = get_transforms_cfg('Euler', 1)
config[3]['train_dataset']['args']['transforms_cfg'] = get_transforms_cfg('Euler', 1)

config[0]['val_dataset']['args']['transforms_cfg'] = get_transforms_cfg('Euler', 3)
config[1]['val_dataset']['args']['transforms_cfg'] = get_transforms_cfg('Euler', 1)
config[2]['val_dataset']['args']['transforms_cfg'] = get_transforms_cfg('Euler', 1)
config[3]['val_dataset']['args']['transforms_cfg'] = get_transforms_cfg('Euler', 1)

config[0]['model']['args']['config']['stage'] = 'Ref'
config[1]['model']['args']['config']['stage'] = 'Desc'
config[2]['model']['args']['config']['stage'] = 'Keypt'
config[3]['model']['args']['config']['stage'] = 'Inlier'

# seeds
config[0]['init_seed'] = 21181952
config[0]['train_seeds'] = [50487174, 43959406, 74801150, 50294813, 46302773, 93530768, 53553791, 41569005, 45473676, 91564309, 7279132, 35044378, 49681815, 70253758, 41308505, 70462161, 8407866, 90353253, 66044324, 14949880, 19572349, 6357341, 47970974, 67468447, 59700181, 25796392, 87758071, 87028865, 9397695, 31183290, 25526459, 46381594, 65508892, 52745024, 81181672, 58176510, 44743042, 4802416, 22330547, 46938049, 34822844, 97614228, 96998847, 43962060, 69214685, 25070128, 77284931, 10630384, 45394188, 49761380, 65015960, 6974913, 70336575, 28958433, 36591358, 76410012, 76607463, 51049236, 7703083, 59228111, 25576646, 22768000, 18104395, 18887714, 88329622, 61958481, 43330410, 29188023, 82612254, 69634370, 5646363, 95949583, 40767095, 93898895, 14766330, 23800366, 88124660, 34760770, 25135369, 65742441, 72034698, 14602927, 87553918, 70599232, 86887375, 98045190, 25413699, 451713, 76612594, 39431766, 94314856, 9754326, 16086609, 82950378, 69101358, 50132940, 97167252, 18364135, 38142475, 63995577]
config[1]['init_seed'] = 60166882
config[1]['train_seeds'] = [51345221, 10964387, 92327570, 97540710, 49283244, 69826562, 90097752, 53514528, 57320218, 5844754, 6042533, 23891192, 64124913, 26804512, 93794387, 55759029, 69236765, 5004154, 39650302, 69635966, 11195149, 39272710, 19358828, 17126384, 74671673, 17916092, 75325784, 74630867, 19962378, 55334415, 7382991, 8758253, 1609230, 85131199, 37702978, 42925853, 28900186, 69137905, 58939901, 66542152, 77711006, 58433289, 2912689, 91728487, 53938248, 56765657, 30990488, 6842877, 80826234, 55192534, 73124945, 76193633, 47184707, 46165534, 91799629, 96042353, 37650975, 33318668, 39804286, 71868685, 46746507, 19340198, 300921, 13295259, 78412767, 68795404, 74730102, 8861952, 56120312, 11806399, 61797653, 8611534, 34649645, 38832440, 67711915, 31950034, 63359638, 47073956, 92528176, 55233904, 21916372, 8592371, 84805131, 75112447, 40351087, 2150553, 28458385, 82984360, 16286422, 81953469, 21522481, 37189059, 35776318, 66579949, 73281915, 49144254, 94675581, 34612135, 76153105, 77037772]
config[2]['init_seed'] = 61542829
config[2]['train_seeds'] = [53199374, 34449594, 33097541, 77677891, 83514320, 90473999, 4117288, 55329462, 41132663, 2744157, 75644093, 88324495, 61540847, 7236611, 67740529, 61915789, 45539996, 91649918, 33105, 66933798, 47659142, 84241399, 40643999, 89865135, 58687119, 59264991, 75505889, 53498050, 3974010, 7774884, 61626896, 9495067, 64490782, 72150360, 76832540, 82383093, 10207974, 4593597, 62148480, 82253149, 48598035, 1510342, 98625627, 78235299, 16973037, 44466366, 71230851, 67244064, 6290705, 89005396, 52948914, 84303111, 30199427, 43455538, 92879825, 31971027, 44629290, 89468372, 34645439, 43636617, 61592664, 45491689, 13804890, 47313128, 95001632, 75910175, 75911681, 64012957, 8558015, 41405136, 26095118, 37887427, 7880205, 99657727, 43841140, 66000825, 87841326, 90703648, 59860888, 78817436, 8378808, 60506003, 28479596, 39132743, 80446702, 91823653, 67740078, 73962852, 96462564, 77387964, 85427466, 97687435, 71922651, 87289418, 41588582, 58425481, 14987449, 4006932, 12068036, 28148295]
config[3]['init_seed'] = 51542689
config[3]['train_seeds'] = [24462086, 13330102, 68370946, 33846458, 59107059, 81681822, 45020348, 87962389, 57768797, 57994125, 14425487, 77722755, 98098608, 51038824, 26722521, 8100769, 34096845, 93179985, 3551151, 28025865, 97197753, 63213260, 92120965, 53367753, 91027805, 99032045, 7102452, 93628359, 71405952, 42649711, 35584871, 41658499, 9198219, 80648660, 1863806, 8945572, 4739750, 53478458, 77185202, 41399114, 15125500, 11050794, 83256695, 58050682, 83368179, 52171331, 4350488, 44638049, 62359476, 63155147, 53755431, 26568012, 60535794, 95001089, 57324226, 31555708, 6162468, 50646365, 70657505, 57909212, 84108001, 67604931, 99619547, 24284563, 86950324, 22271985, 43286881, 71917633, 34643348, 43572997, 39622868, 98916238, 63074881, 4178320, 52030301, 22735268, 3046800, 64806354, 29254299, 30395697, 9721674, 32372265, 79537009, 41624407, 33938705, 47466452, 29708557, 19007643, 79008458, 90444246, 98922088, 93553177, 19979778, 97491330, 38899554, 80468066, 17278564, 22073671, 6164206, 18057817]

# work dir
config[0]['work_dir'] = "./logs/benchmarks/point_cloud_registration/real_pcr_0.4/BUFFER_run_1"
config[1]['work_dir'] = "./logs/benchmarks/point_cloud_registration/real_pcr_0.4/BUFFER_run_1"
config[2]['work_dir'] = "./logs/benchmarks/point_cloud_registration/real_pcr_0.4/BUFFER_run_1"
config[3]['work_dir'] = "./logs/benchmarks/point_cloud_registration/real_pcr_0.4/BUFFER_run_1"
