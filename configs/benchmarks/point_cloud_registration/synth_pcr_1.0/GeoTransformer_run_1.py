# This file is automatically generated by `./configs/benchmarks/point_cloud_registration/gen.py`.
# Please do not attempt to modify manually.
from torch.optim.adam import Adam
from torch.optim.lr_scheduler import StepLR
from criteria.vision_3d.point_cloud_registration.geotransformer_criterion.geotransformer_criterion import GeoTransformerCriterion
from data.dataloaders.geotransformer_dataloader import GeoTransformerDataloader
from data.datasets.pcr_datasets.single_temporal_pcr_dataset import SingleTemporalPCRDataset
from data.transforms.compose import Compose
from data.transforms.vision_3d.clamp import Clamp
from metrics.vision_3d.point_cloud_registration.geotransformer_metric.geotransformer_metric import GeoTransformerMetric
from models.point_cloud_registration.geotransformer.geotransformer import GeoTransformer
from optimizers.single_task_optimizer import SingleTaskOptimizer
from runners.supervised_single_task_trainer import SupervisedSingleTaskTrainer


config = {
    'runner': SupervisedSingleTaskTrainer,
    'work_dir': './logs/benchmarks/point_cloud_registration/synth_pcr_1.0/GeoTransformer_run_1',
    'epochs': 100,
    'init_seed': 92978070,
    'train_seeds': [57386089, 91871188, 48479728, 44452854, 10402561, 54485068, 93910896, 49376957, 35593683, 23657400, 17641310, 52712346, 47931012, 1704496, 30342378, 87073872, 25331325, 84178425, 45998189, 90293683, 33091969, 19789322, 5336154, 50050164, 48055910, 5526276, 44983422, 75925743, 89766181, 74020106, 32938377, 93562316, 78141333, 55517733, 74413153, 32713029, 30729473, 91092589, 35820633, 70060433, 49040688, 96063213, 22982126, 97495354, 40532386, 96220313, 60801977, 47531799, 98814201, 84066815, 220602, 45817763, 44011941, 84410887, 60762113, 71838667, 95732412, 10647667, 6393238, 31475288, 80720132, 20940546, 99988482, 58303926, 93691684, 41122543, 92379921, 86771444, 61394013, 49928834, 82011615, 752127, 63623618, 77417702, 71445683, 50506629, 44501873, 7018280, 3853431, 9974228, 22225150, 81387374, 9862885, 19133905, 40184446, 93795035, 50969633, 28172968, 46943638, 34661687, 87601964, 76036618, 65508424, 84672962, 80980208, 19874101, 73535061, 97069617, 99119604, 47446562],
    'val_seeds': [46773800, 85336456, 87322294, 81202246, 42162042, 1900500, 89847444, 68266242, 58419945, 40328768, 63685333, 82845778, 55349761, 55275523, 94197318, 49774413, 50464473, 90028479, 91716245, 81098518, 5715361, 10988436, 69673655, 62370028, 67378705, 5134638, 29821686, 8742661, 84789393, 56827394, 32609741, 19515481, 1271950, 66191252, 98734768, 75967745, 53990988, 89327535, 86715912, 12281852, 52066076, 32252874, 20691515, 19027575, 78890225, 63850524, 53526072, 70365944, 11134999, 45176706, 81509115, 89135899, 6947028, 35527440, 12538386, 62090055, 2637181, 29336389, 16464952, 52463551, 71223213, 68427591, 26316544, 39331141, 46451571, 95809279, 26878165, 44373550, 96228124, 20095460, 54953737, 41909224, 18623221, 61292787, 87114957, 53166067, 38699136, 38739690, 83503142, 55892944, 51932871, 40156437, 85472019, 80986303, 82031261, 1476140, 63415406, 6096504, 63072151, 41422557, 29834139, 6224641, 88067242, 1407520, 74369826, 98973068, 8236281, 23389036, 77163910, 13684933],
    'test_seed': 1472669,
    'train_dataset': {
        'class': SingleTemporalPCRDataset,
        'args': {
            'data_root': './data/datasets/soft_links/ivision-pcr-data',
            'cache_filepath': './data/datasets/soft_links/ivision-pcr-data/../single_temporal_pcr_cache.json',
            'split': 'train',
            'dataset_size': 5000,
            'rotation_mag': 45.0,
            'translation_mag': 0.5,
            'matching_radius': 0.05,
            'overlap_range': (0.0, 1.0),
            'min_points': 512,
            'transforms_cfg': {
                'class': Compose,
                'args': {
                    'transforms': [{
    'op': {
        'class': Clamp,
        'args': {
            'max_points': 8192,
        },
    },
    'input_names': [('inputs', 'src_pc'), ('inputs', 'tgt_pc')],
}],
                },
            },
            'overlap': 1.0,
        },
    },
    'train_dataloader': {
        'class': GeoTransformerDataloader,
        'args': {
            'batch_size': 1,
            'num_workers': 4,
            'num_stages': 4,
            'voxel_size': 0.1,
            'search_radius': 0.25,
        },
    },
    'criterion': {
        'class': GeoTransformerCriterion,
        'args': {
            'loss': {
                'weight_coarse_loss': 1.0,
                'weight_fine_loss': 1.0,
            },
            'coarse_loss': {
                'positive_margin': 0.1,
                'negative_margin': 1.4,
                'positive_optimal': 0.1,
                'negative_optimal': 1.4,
                'log_scale': 24,
                'positive_overlap': 0.1,
            },
            'fine_loss': {
                'positive_radius': 0.05,
            },
        },
    },
    'val_dataset': {
        'class': SingleTemporalPCRDataset,
        'args': {
            'data_root': './data/datasets/soft_links/ivision-pcr-data',
            'cache_filepath': './data/datasets/soft_links/ivision-pcr-data/../single_temporal_pcr_cache.json',
            'split': 'val',
            'dataset_size': 1000,
            'rotation_mag': 45.0,
            'translation_mag': 0.5,
            'matching_radius': 0.05,
            'overlap_range': (0.0, 1.0),
            'min_points': 512,
            'transforms_cfg': {
                'class': Compose,
                'args': {
                    'transforms': [{
    'op': {
        'class': Clamp,
        'args': {
            'max_points': 8192,
        },
    },
    'input_names': [('inputs', 'src_pc'), ('inputs', 'tgt_pc')],
}],
                },
            },
            'overlap': 1.0,
        },
    },
    'val_dataloader': {
        'class': GeoTransformerDataloader,
        'args': {
            'batch_size': 1,
            'num_workers': 4,
            'num_stages': 4,
            'voxel_size': 0.1,
            'search_radius': 0.25,
        },
    },
    'test_dataset': None,
    'test_dataloader': None,
    'metric': {
        'class': GeoTransformerMetric,
        'args': {
            'acceptance_overlap': 0.0,
            'acceptance_radius': 0.1,
            'inlier_ratio_threshold': 0.05,
            'rmse_threshold': 0.2,
            'rre_threshold': 15.0,
            'rte_threshold': 0.3,
        },
    },
    'model': {
        'class': GeoTransformer,
        'args': {
            'model': {
                'ground_truth_matching_radius': 0.05,
                'num_points_in_patch': 32,
                'num_sinkhorn_iterations': 100,
            },
            'backbone': {
                'num_stages': 4,
                'init_voxel_size': 0.025,
                'kernel_size': 15,
                'base_radius': 2.5,
                'base_sigma': 2.0,
                'init_radius': 0.0625,
                'init_sigma': 0.05,
                'group_norm': 32,
                'input_dim': 1,
                'init_dim': 64,
                'output_dim': 256,
            },
            'geotransformer': {
                'input_dim': 1024,
                'hidden_dim': 256,
                'output_dim': 256,
                'num_heads': 4,
                'blocks': ['self', 'cross', 'self', 'cross', 'self', 'cross'],
                'sigma_d': 0.2,
                'sigma_a': 15,
                'angle_k': 3,
                'reduction_a': 'max',
            },
            'coarse_matching': {
                'num_targets': 128,
                'overlap_threshold': 0.1,
                'num_correspondences': 256,
                'dual_normalization': True,
            },
            'fine_matching': {
                'topk': 3,
                'acceptance_radius': 0.1,
                'mutual': True,
                'confidence_threshold': 0.05,
                'use_dustbin': False,
                'use_global_score': False,
                'correspondence_threshold': 3,
                'correspondence_limit': None,
                'num_refinement_steps': 5,
            },
        },
    },
    'optimizer': {
        'class': SingleTaskOptimizer,
        'args': {
            'optimizer_config': {
                'class': Adam,
                'args': {
                    'params': None,
                    'lr': 0.0001,
                    'weight_decay': 1e-06,
                },
            },
        },
    },
    'scheduler': {
        'class': StepLR,
        'args': {
            'optimizer': None,
            'step_size': 1000,
            'gamma': 0.95,
        },
    },
}
