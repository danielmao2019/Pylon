# This file is automatically generated by `./configs/benchmarks/point_cloud_registration/gen.py`.
# Please do not attempt to modify manually.
from torch.optim.adam import Adam
from torch.optim.lr_scheduler import StepLR
from criteria.vision_3d.point_cloud_registration.d3feat_criteria.d3feat_criterion import D3FeatCriterion
from data.dataloaders.d3feat_dataloader import D3FeatDataLoader
from data.datasets.pcr_datasets.kitti_dataset import KITTIDataset
from data.transforms.compose import Compose
from data.transforms.identity import Identity
from data.transforms.vision_3d.clamp import Clamp
from data.transforms.vision_3d.downsample import DownSample
from data.transforms.vision_3d.estimate_normals import EstimateNormals
from data.transforms.vision_3d.random_rigid_transform import RandomRigidTransform
from data.transforms.vision_3d.shuffle import Shuffle
from data.transforms.vision_3d.uniform_pos_noise import UniformPosNoise
from metrics.vision_3d.point_cloud_registration.d3feat_metrics.d3feat_metric import D3FeatDescriptorMetric
from models.point_cloud_registration.d3feat.d3feat_model import D3FeatModel
from optimizers.single_task_optimizer import SingleTaskOptimizer
from runners.trainers.supervised_single_task_trainer import SupervisedSingleTaskTrainer


config = {
    'runner': SupervisedSingleTaskTrainer,
    'work_dir': './logs/benchmarks/point_cloud_registration/kitti/D3Feat_run_0',
    'epochs': 100,
    'init_seed': 87582075,
    'train_seeds': [8323361, 18166144, 30534252, 92751298, 16273951, 78152568, 18822820, 72561738, 41518371, 91573318, 66389164, 24690371, 4970818, 26134069, 34859699, 18886822, 50034011, 91653676, 92737875, 71358956, 11863845, 15712338, 45955652, 55119011, 64996009, 40563760, 10310378, 46006279, 4859549, 98432051, 92620641, 83855841, 33687798, 76127004, 91432553, 66141277, 98186560, 92652498, 70190785, 7444522, 98702857, 95893163, 3450838, 57120426, 42053051, 19498808, 22739540, 49135465, 55314087, 28031751, 16904631, 13963777, 51132602, 79562171, 88633903, 1636746, 21175156, 58906305, 62045030, 10019498, 685036, 34109251, 27958228, 97197441, 1988716, 30189599, 94029268, 5733532, 76747588, 8914218, 82078097, 64933600, 5540907, 14255841, 36042312, 17215371, 35611101, 91693445, 41775384, 57751566, 6467461, 83062520, 31585255, 60754738, 24726954, 3409023, 1173244, 6314548, 54131531, 79341647, 6586147, 85604129, 14588965, 16850259, 51706283, 91741365, 63941595, 11512508, 84848073, 33442601],
    'val_seeds': [58517401, 82438755, 18233823, 46139250, 1389250, 57803831, 67619585, 24369785, 5220291, 7405170, 12506276, 13231666, 81590323, 97547811, 29383572, 76156104, 78377380, 60679775, 59664827, 49371968, 43132493, 64003303, 23045601, 23801829, 96292137, 72123219, 36551256, 12840650, 65472149, 90161043, 33152536, 65787315, 45518213, 54370444, 53573816, 66077569, 43898540, 86369948, 96217355, 59280982, 57172412, 16667346, 81219363, 83085394, 83209562, 10530266, 40022381, 9769991, 58553298, 73118480, 69254552, 45997665, 34647054, 60947826, 20314508, 59061393, 54449584, 57028661, 64860457, 80040066, 5504959, 19953691, 71291640, 62713766, 60382608, 83240493, 22664307, 11461379, 6646751, 13896181, 42452646, 40931838, 62323348, 1311164, 69323195, 98388904, 39791521, 40174336, 93608790, 85585425, 20797852, 74800510, 5174529, 94058789, 56995613, 23590357, 59116332, 44156900, 90704207, 87012251, 77300566, 56817956, 80814585, 76545435, 96891500, 77119348, 93232504, 41334225, 73292656, 12300384],
    'test_seed': 47580757,
    'train_dataset': {
        'class': KITTIDataset,
        'args': {
            'data_root': './data/datasets/soft_links/KITTI',
            'split': 'train',
            'transforms_cfg': {
                'class': Compose,
                'args': {
                    'transforms': [{
    'op': {
        'class': UniformPosNoise,
        'args': {
            'min': -0.025,
            'max': 0.025,
        },
    },
    'input_names': [('inputs', 'src_pc'), ('inputs', 'tgt_pc')],
}, {
    'op': {
        'class': DownSample,
        'args': {
            'voxel_size': 0.05,
        },
    },
    'input_names': [('inputs', 'src_pc'), ('inputs', 'tgt_pc')],
    'output_names': [('inputs', 'src_pc_fds'), ('inputs', 'tgt_pc_fds')],
}, {
    'op': {
        'class': Shuffle,
        'args': {},
    },
    'input_names': [('inputs', 'src_pc_fds'), ('inputs', 'tgt_pc_fds')],
}, {
    'op': {
        'class': RandomRigidTransform,
        'args': {
            'rot_mag': 180.0,
            'trans_mag': 0.0,
            'method': 'Euler',
            'num_axis': 3,
        },
    },
    'input_names': [('inputs', 'src_pc_fds'), ('inputs', 'tgt_pc_fds'), ('labels', 'transform')],
}, {
    'op': {
        'class': DownSample,
        'args': {
            'voxel_size': 0.3,
        },
    },
    'input_names': [('inputs', 'src_pc_fds'), ('inputs', 'tgt_pc_fds')],
    'output_names': [('inputs', 'src_pc_sds'), ('inputs', 'tgt_pc_sds')],
}, {
    'op': {
        'class': Shuffle,
        'args': {},
    },
    'input_names': [('inputs', 'src_pc_sds'), ('inputs', 'tgt_pc_sds')],
}, {
    'op': {
        'class': Clamp,
        'args': {
            'max_points': 40000,
        },
    },
    'input_names': [('inputs', 'src_pc_sds')],
}, {
    'op': {
        'class': Clamp,
        'args': {
            'max_points': 40000,
        },
    },
    'input_names': [('inputs', 'tgt_pc_sds')],
}, {
    'op': {
        'class': EstimateNormals,
        'args': {},
    },
    'input_names': [('inputs', 'src_pc_sds'), ('inputs', 'tgt_pc_sds')],
}, {
    'op': {
        'class': Identity,
        'args': {},
    },
    'input_names': [('inputs', 'src_pc_fds'), ('inputs', 'tgt_pc_fds'), ('inputs', 'src_pc_sds'), ('inputs', 'tgt_pc_sds'), ('labels', 'transform'), ('meta_info', 'seq'), ('meta_info', 't0'), ('meta_info', 't1')],
}],
                },
            },
        },
    },
    'train_dataloader': {
        'class': D3FeatDataLoader,
        'args': {
            'batch_size': 1,
            'num_workers': 4,
            'shuffle': True,
            'config': {
                'num_layers': 5,
                'first_subsampling_dl': 0.03,
                'conv_radius': 2.5,
                'deform_radius': 5.0,
                'num_kernel_points': 15,
            },
        },
    },
    'criterion': {
        'class': D3FeatCriterion,
        'args': {
            'loss_type': 'circle',
            'pos_margin': 0.1,
            'neg_margin': 1.4,
            'pos_optimal': 0.1,
            'neg_optimal': 1.4,
            'log_scale': 10.0,
            'safe_radius': 0.04,
            'use_buffer': True,
        },
    },
    'val_dataset': {
        'class': KITTIDataset,
        'args': {
            'data_root': './data/datasets/soft_links/KITTI',
            'split': 'val',
            'transforms_cfg': {
                'class': Compose,
                'args': {
                    'transforms': [{
    'op': {
        'class': UniformPosNoise,
        'args': {
            'min': -0.025,
            'max': 0.025,
        },
    },
    'input_names': [('inputs', 'src_pc'), ('inputs', 'tgt_pc')],
}, {
    'op': {
        'class': DownSample,
        'args': {
            'voxel_size': 0.05,
        },
    },
    'input_names': [('inputs', 'src_pc'), ('inputs', 'tgt_pc')],
    'output_names': [('inputs', 'src_pc_fds'), ('inputs', 'tgt_pc_fds')],
}, {
    'op': {
        'class': Shuffle,
        'args': {},
    },
    'input_names': [('inputs', 'src_pc_fds'), ('inputs', 'tgt_pc_fds')],
}, {
    'op': {
        'class': RandomRigidTransform,
        'args': {
            'rot_mag': 180.0,
            'trans_mag': 0.0,
            'method': 'Euler',
            'num_axis': 3,
        },
    },
    'input_names': [('inputs', 'src_pc_fds'), ('inputs', 'tgt_pc_fds'), ('labels', 'transform')],
}, {
    'op': {
        'class': DownSample,
        'args': {
            'voxel_size': 0.3,
        },
    },
    'input_names': [('inputs', 'src_pc_fds'), ('inputs', 'tgt_pc_fds')],
    'output_names': [('inputs', 'src_pc_sds'), ('inputs', 'tgt_pc_sds')],
}, {
    'op': {
        'class': Shuffle,
        'args': {},
    },
    'input_names': [('inputs', 'src_pc_sds'), ('inputs', 'tgt_pc_sds')],
}, {
    'op': {
        'class': Clamp,
        'args': {
            'max_points': 40000,
        },
    },
    'input_names': [('inputs', 'src_pc_sds')],
}, {
    'op': {
        'class': Clamp,
        'args': {
            'max_points': 40000,
        },
    },
    'input_names': [('inputs', 'tgt_pc_sds')],
}, {
    'op': {
        'class': EstimateNormals,
        'args': {},
    },
    'input_names': [('inputs', 'src_pc_sds'), ('inputs', 'tgt_pc_sds')],
}, {
    'op': {
        'class': Identity,
        'args': {},
    },
    'input_names': [('inputs', 'src_pc_fds'), ('inputs', 'tgt_pc_fds'), ('inputs', 'src_pc_sds'), ('inputs', 'tgt_pc_sds'), ('labels', 'transform'), ('meta_info', 'seq'), ('meta_info', 't0'), ('meta_info', 't1')],
}],
                },
            },
        },
    },
    'val_dataloader': {
        'class': D3FeatDataLoader,
        'args': {
            'batch_size': 1,
            'num_workers': 4,
            'shuffle': False,
            'config': {
                'num_layers': 5,
                'first_subsampling_dl': 0.03,
                'conv_radius': 2.5,
                'deform_radius': 5.0,
                'num_kernel_points': 15,
            },
        },
    },
    'test_dataset': None,
    'test_dataloader': None,
    'metric': {
        'class': D3FeatDescriptorMetric,
        'args': {
            'distance_threshold': 0.1,
            'use_buffer': True,
        },
    },
    'model': {
        'class': D3FeatModel,
        'args': {
            'num_layers': 5,
            'in_points_dim': 3,
            'first_features_dim': 128,
            'first_subsampling_dl': 0.03,
            'in_features_dim': 1,
            'conv_radius': 2.5,
            'deform_radius': 5.0,
            'num_kernel_points': 15,
            'KP_extent': 2.0,
            'KP_influence': 'linear',
            'aggregation_mode': 'sum',
            'fixed_kernel_points': 'center',
            'use_batch_norm': False,
            'batch_norm_momentum': 0.02,
            'deformable': False,
            'modulated': False,
        },
    },
    'optimizer': {
        'class': SingleTaskOptimizer,
        'args': {
            'optimizer_config': {
                'class': Adam,
                'args': {
                    'params': None,
                    'lr': 0.001,
                    'weight_decay': 1e-06,
                },
            },
        },
    },
    'scheduler': {
        'class': StepLR,
        'args': {
            'optimizer': None,
            'step_size': 1000.0,
            'gamma': 0.95,
        },
    },
}
