# This file is automatically generated by `./configs/benchmarks/point_cloud_registration/gen.py`.
# Please do not attempt to modify manually.
import torch
import criteria
import metrics
import optimizers
import runners.pcr_trainers

import copy
from configs.common.datasets.point_cloud_registration.train.buffer_data_cfg import get_transforms_cfg
from configs.common.datasets.point_cloud_registration.train.buffer_data_cfg import data_cfg as train_data_cfg
from configs.common.datasets.point_cloud_registration.val.buffer_data_cfg import data_cfg as val_data_cfg
from configs.common.models.point_cloud_registration.buffer_cfg import model_cfg

optimizer_cfg = {
    'class': optimizers.SingleTaskOptimizer,
    'args': {
        'optimizer_config': {
            'class': torch.optim.Adam,
            'args': {
                'params': None,
                'lr': 1.0e-4,
                'weight_decay': 1.0e-06,
            },
        },
    },
}

scheduler_cfg = {
    'class': torch.optim.lr_scheduler.StepLR,
    'args': {
        'optimizer': None,
        'step_size': 1000,
        'gamma': 0.95,
    },
}

config = [
{
    'stage': 'Ref',
    'runner': runners.pcr_trainers.BufferTrainer,
    'work_dir': None,
    'epochs': 100,
    # seeds
    'init_seed': None,
    'train_seeds': None,
    # dataset config
    'train_dataset': copy.deepcopy(train_data_cfg['train_dataset']),
    'train_dataloader': copy.deepcopy(train_data_cfg['train_dataloader']),
    'criterion': {
        'class': criteria.vision_3d.point_cloud_registration.BUFFER_RefStageCriterion,
        'args': {},
    },
    'val_dataset': copy.deepcopy(val_data_cfg['val_dataset']),
    'val_dataloader': copy.deepcopy(val_data_cfg['val_dataloader']),
    'test_dataset': None,
    'test_dataloader': None,
    'metric': {
        'class': metrics.vision_3d.point_cloud_registration.BUFFER_RefStageMetric,
        'args': {},
    },
    # model config
    'model': copy.deepcopy(model_cfg),
    # optimizer config
    'optimizer': copy.deepcopy(optimizer_cfg),
    # scheduler config
    'scheduler': copy.deepcopy(scheduler_cfg),
},
{
    'stage': 'Desc',
    'runner': runners.pcr_trainers.BufferTrainer,
    'work_dir': None,
    'epochs': 100,
    # seeds
    'init_seed': None,
    'train_seeds': None,
    # dataset config
    'train_dataset': copy.deepcopy(train_data_cfg['train_dataset']),
    'train_dataloader': copy.deepcopy(train_data_cfg['train_dataloader']),
    'criterion': {
        'class': criteria.vision_3d.point_cloud_registration.BUFFER_DescStageCriterion,
        'args': {},
    },
    'val_dataset': copy.deepcopy(val_data_cfg['val_dataset']),
    'val_dataloader': copy.deepcopy(val_data_cfg['val_dataloader']),
    'test_dataset': None,
    'test_dataloader': None,
    'metric': {
        'class': metrics.vision_3d.point_cloud_registration.BUFFER_DescStageMetric,
        'args': {},
    },
    # model config
    'model': copy.deepcopy(model_cfg),
    # optimizer config
    'optimizer': copy.deepcopy(optimizer_cfg),
    # scheduler config
    'scheduler': copy.deepcopy(scheduler_cfg),
},
{
    'stage': 'Keypt',
    'runner': runners.pcr_trainers.BufferTrainer,
    'work_dir': None,
    'epochs': 100,
    # seeds
    'init_seed': None,
    'train_seeds': None,
    # dataset config
    'train_dataset': copy.deepcopy(train_data_cfg['train_dataset']),
    'train_dataloader': copy.deepcopy(train_data_cfg['train_dataloader']),
    'criterion': {
        'class': criteria.vision_3d.point_cloud_registration.BUFFER_KeyptStageCriterion,
        'args': {},
    },
    'val_dataset': copy.deepcopy(val_data_cfg['val_dataset']),
    'val_dataloader': copy.deepcopy(val_data_cfg['val_dataloader']),
    'test_dataset': None,
    'test_dataloader': None,
    'metric': {
        'class': metrics.vision_3d.point_cloud_registration.BUFFER_KeyptStageMetric,
        'args': {},
    },
    # model config
    'model': copy.deepcopy(model_cfg),
    # optimizer config
    'optimizer': copy.deepcopy(optimizer_cfg),
    # scheduler config
    'scheduler': copy.deepcopy(scheduler_cfg),
},
{
    'stage': 'Inlier',
    'runner': runners.pcr_trainers.BufferTrainer,
    'work_dir': None,
    'epochs': 100,
    # seeds
    'init_seed': None,
    'train_seeds': None,
    # dataset config
    'train_dataset': copy.deepcopy(train_data_cfg['train_dataset']),
    'train_dataloader': copy.deepcopy(train_data_cfg['train_dataloader']),
    'criterion': {
        'class': criteria.vision_3d.point_cloud_registration.BUFFER_InlierStageCriterion,
        'args': {},
    },
    'val_dataset': copy.deepcopy(val_data_cfg['val_dataset']),
    'val_dataloader': copy.deepcopy(val_data_cfg['val_dataloader']),
    'test_dataset': None,
    'test_dataloader': None,
    'metric': {
        'class': metrics.vision_3d.point_cloud_registration.BUFFER_InlierStageMetric,
        'args': {},
    },
    # model config
    'model': copy.deepcopy(model_cfg),
    # optimizer config
    'optimizer': copy.deepcopy(optimizer_cfg),
    # scheduler config
    'scheduler': copy.deepcopy(scheduler_cfg),
},
]

config[0]['train_dataset']['args']['transforms_cfg'] = get_transforms_cfg('Euler', 3)
config[1]['train_dataset']['args']['transforms_cfg'] = get_transforms_cfg('Euler', 1)
config[2]['train_dataset']['args']['transforms_cfg'] = get_transforms_cfg('Euler', 1)
config[3]['train_dataset']['args']['transforms_cfg'] = get_transforms_cfg('Euler', 1)

config[0]['val_dataset']['args']['transforms_cfg'] = get_transforms_cfg('Euler', 3)
config[1]['val_dataset']['args']['transforms_cfg'] = get_transforms_cfg('Euler', 1)
config[2]['val_dataset']['args']['transforms_cfg'] = get_transforms_cfg('Euler', 1)
config[3]['val_dataset']['args']['transforms_cfg'] = get_transforms_cfg('Euler', 1)

config[0]['model']['args']['config']['stage'] = 'Ref'
config[1]['model']['args']['config']['stage'] = 'Desc'
config[2]['model']['args']['config']['stage'] = 'Keypt'
config[3]['model']['args']['config']['stage'] = 'Inlier'

# seeds
config[0]['init_seed'] = 65761505
config[0]['train_seeds'] = [1111166, 84303021, 425920, 63133532, 52093191, 25964273, 3275193, 46284652, 50344357, 19042420, 36613880, 67401150, 92056879, 95487025, 31167637, 67532707, 36716538, 50978990, 70632606, 51417138, 18349749, 36705037, 63599473, 91417466, 38477120, 49206905, 43280659, 44243872, 38892743, 57457883, 34358172, 41717334, 90039618, 85220100, 32039686, 89038278, 67930833, 4930222, 25020563, 92510953, 97511312, 66491148, 15096140, 3475714, 36104028, 3698502, 46742694, 61850233, 87311853, 22082893, 43019185, 88084695, 78075002, 8867620, 61653865, 32233241, 667864, 75654855, 50621386, 84984611, 49679062, 82889407, 68168731, 13325547, 28589545, 3820309, 5686379, 19996456, 54844333, 38258638, 67237128, 55551605, 75485788, 87465584, 37337859, 4827791, 67457405, 37855442, 7354776, 54486541, 85853865, 57665274, 89405563, 62653273, 52607005, 19341306, 92669435, 23901578, 68335622, 80920238, 95478678, 65927248, 81851741, 83554793, 13879248, 90739334, 28183292, 73723784, 15757425, 72173534]
config[1]['init_seed'] = 87009809
config[1]['train_seeds'] = [26171354, 1742282, 99070568, 15530449, 89997405, 95285596, 69819164, 61093939, 31897297, 50322336, 10592213, 87153067, 85744217, 674919, 64469503, 45772092, 9453083, 33584467, 90549730, 66499502, 76939288, 45016311, 54002415, 93677285, 68348243, 13234491, 22415943, 41624925, 95077627, 27860568, 71981299, 44795012, 51791592, 61045725, 97700195, 23611189, 85941358, 25053648, 44594492, 37292824, 78191297, 49254497, 98281693, 32527031, 96905921, 59867212, 23425944, 3538313, 99689552, 45335013, 58411624, 87006404, 52522645, 94377611, 46200998, 94757972, 34158658, 8585493, 9977997, 62741187, 5084307, 47556886, 28583900, 95833240, 45884995, 29598415, 77362918, 89201330, 36917397, 78001505, 42198324, 10269054, 66082114, 82752782, 16715448, 31040998, 48271032, 26714054, 45930560, 62671772, 21745750, 85360086, 52029079, 48214051, 63706483, 74704782, 47779883, 33289270, 56797419, 16779823, 62772596, 90690516, 63951367, 16826935, 49488589, 10573733, 74185059, 47463006, 5889467, 7505770]
config[2]['init_seed'] = 56111182
config[2]['train_seeds'] = [75926543, 3559680, 98066596, 4388501, 3191548, 47739830, 30619514, 6608720, 79771584, 67299960, 77871071, 85429832, 98129407, 38991798, 87921559, 13056374, 89445955, 52538884, 88074420, 17766710, 14856710, 30590381, 9570579, 37084712, 63888884, 27625157, 37835471, 96949348, 66066994, 2283428, 27958177, 54422160, 27527632, 91378793, 59388504, 78650772, 88209574, 26306826, 79446839, 96437370, 73650950, 44299757, 84068632, 97595809, 22113502, 64983335, 65157827, 15374683, 69610472, 55617923, 6164099, 53277993, 6952702, 82662053, 16910797, 33779821, 63397802, 15109406, 18437044, 47551685, 26931074, 63565918, 68021408, 32254780, 17581303, 32676600, 7376830, 54941062, 58230801, 76623425, 4214913, 63236752, 63538990, 59305711, 31743062, 94919954, 94772778, 36975912, 31177119, 27753972, 53418217, 41796111, 42459685, 64078950, 20499431, 90111390, 56197060, 91225727, 11989092, 84117128, 83979336, 48268404, 33594121, 3333280, 44871700, 9882120, 92990797, 77862785, 24984104, 52343118]
config[3]['init_seed'] = 10442002
config[3]['train_seeds'] = [40774853, 67774378, 26121593, 17897889, 33045406, 751955, 67818633, 93693522, 57818741, 37822012, 55426743, 87443262, 50458544, 82560779, 69668078, 70279812, 68468680, 36497301, 7096209, 45178923, 76547390, 33338476, 98808434, 36393938, 74105328, 42906859, 46322586, 34633749, 44334540, 62371429, 71629255, 32037335, 23154889, 15531111, 53831524, 82215127, 40673801, 54667716, 53795794, 58445105, 87286219, 17413126, 297600, 79655931, 73934284, 66327855, 74719593, 1713226, 75729593, 17787616, 71361607, 58845028, 82777875, 42708286, 1088552, 57320381, 69520686, 39836929, 2086886, 17586894, 85140952, 96664135, 82724012, 12776418, 38131944, 53468825, 94730665, 5418802, 8039275, 28818631, 35349651, 36713433, 78170129, 82038959, 30396346, 55063110, 8185173, 5274987, 38186201, 69982512, 57671747, 73902350, 56071044, 92621916, 26891122, 63312472, 28615101, 80244842, 57790833, 11444109, 71466299, 64862451, 16754108, 25037947, 7193333, 89494257, 82588115, 83170562, 44778011, 41469605]

# work dir
config[0]['work_dir'] = "./logs/benchmarks/point_cloud_registration/kitti/BUFFER_run_2"
config[1]['work_dir'] = "./logs/benchmarks/point_cloud_registration/kitti/BUFFER_run_2"
config[2]['work_dir'] = "./logs/benchmarks/point_cloud_registration/kitti/BUFFER_run_2"
config[3]['work_dir'] = "./logs/benchmarks/point_cloud_registration/kitti/BUFFER_run_2"
