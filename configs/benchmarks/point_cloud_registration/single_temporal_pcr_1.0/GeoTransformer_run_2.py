# This file is automatically generated by `./configs/benchmarks/point_cloud_registration/gen.py`.
# Please do not attempt to modify manually.
from torch.optim.adam import Adam
from torch.optim.lr_scheduler import StepLR
from criteria.vision_3d.point_cloud_registration.geotransformer_criterion.geotransformer_criterion import GeoTransformerCriterion
from data.dataloaders.geotransformer_dataloader import GeoTransformerDataloader
from data.datasets.pcr_datasets.single_temporal_pcr_dataset import SingleTemporalPCRDataset
from data.transforms.compose import Compose
from data.transforms.vision_3d.clamp import Clamp
from metrics.vision_3d.point_cloud_registration.geotransformer_metric.geotransformer_metric import GeoTransformerMetric
from models.point_cloud_registration.geotransformer.geotransformer import GeoTransformer
from optimizers.single_task_optimizer import SingleTaskOptimizer
from runners.supervised_single_task_trainer import SupervisedSingleTaskTrainer


config = {
    'runner': SupervisedSingleTaskTrainer,
    'work_dir': './logs/benchmarks/point_cloud_registration/single_temporal_pcr_1.0/GeoTransformer_run_2',
    'epochs': 100,
    'init_seed': 63156138,
    'train_seeds': [61155990, 79123852, 25044043, 41763133, 33126713, 55190505, 83028693, 32536057, 51391901, 45444429, 68738006, 1147941, 38651361, 74338142, 25166929, 96365576, 45861538, 29121806, 25376494, 49699592, 67451519, 34404252, 72831776, 96584013, 3052690, 42354566, 14571957, 93097100, 62075539, 8946293, 1863658, 70270799, 82485284, 56153859, 72033397, 36600791, 31034216, 21264488, 84790993, 28764529, 74155667, 15329671, 16712785, 68974802, 9911760, 35369777, 17819744, 76020996, 85757889, 15174575, 23931251, 39206971, 56145414, 18917871, 15818418, 66584786, 75226306, 71973495, 24609718, 85726763, 51560267, 11741611, 50404040, 92531764, 82459311, 65261675, 87034218, 86306755, 95282294, 49956439, 74405489, 3486623, 92402802, 85430543, 93316564, 30178067, 8501853, 15892079, 88402400, 14960665, 41609815, 89575222, 34618969, 33517310, 66931677, 90902372, 78030947, 28424569, 98993497, 50601883, 60982910, 34846970, 20911779, 28988041, 17254134, 43467428, 93055296, 3984896, 26430128, 40576183],
    'val_seeds': [78273326, 32143143, 74629529, 78527694, 58294283, 19261183, 95272249, 48118886, 58574904, 58934559, 35985322, 98618099, 30510247, 78218820, 28711634, 16894113, 24114817, 10861265, 59226294, 69771123, 57781092, 1991034, 11497273, 88817169, 66339645, 5045070, 52821495, 91444489, 38513235, 89683743, 71063161, 60784837, 19067536, 57889295, 69627638, 11401082, 24910627, 90661561, 88732980, 37470840, 53699939, 43091628, 82079570, 11253661, 98207576, 84376648, 82519148, 15969947, 60715863, 53273912, 36853518, 63866290, 8293379, 17896818, 97967554, 28799803, 44234307, 97530721, 83622833, 54818901, 91392992, 58245127, 36671654, 1430083, 60264335, 7410122, 70234190, 7980472, 49169216, 37518285, 16482263, 1345644, 37619749, 50339373, 1601378, 83761932, 64982682, 98760781, 25721898, 83267416, 97084169, 72208435, 31484517, 5988618, 84215255, 40335419, 42768709, 28749726, 62426662, 63245598, 22163581, 65437863, 8789960, 73379267, 94548735, 57158150, 49484692, 12170183, 35166613, 12880237],
    'test_seed': 30427393,
    'train_dataset': {
        'class': SingleTemporalPCRDataset,
        'args': {
            'data_root': './data/datasets/soft_links/ivision-pcr-data',
            'cache_filepath': './data/datasets/soft_links/ivision-pcr-data/../single_temporal_pcr_cache.json',
            'split': 'train',
            'dataset_size': 5000,
            'rotation_mag': 45.0,
            'translation_mag': 0.5,
            'matching_radius': 0.05,
            'overlap_range': (0.0, 1.0),
            'min_points': 512,
            'transforms_cfg': {
                'class': Compose,
                'args': {
                    'transforms': [{
    'op': {
        'class': Clamp,
        'args': {
            'max_points': 8192,
        },
    },
    'input_names': [('inputs', 'src_pc'), ('inputs', 'tgt_pc')],
}],
                },
            },
            'overlap': 1.0,
        },
    },
    'train_dataloader': {
        'class': GeoTransformerDataloader,
        'args': {
            'batch_size': 1,
            'num_workers': 4,
            'num_stages': 4,
            'voxel_size': 0.1,
            'search_radius': 0.25,
        },
    },
    'criterion': {
        'class': GeoTransformerCriterion,
        'args': {
            'loss': {
                'weight_coarse_loss': 1.0,
                'weight_fine_loss': 1.0,
            },
            'coarse_loss': {
                'positive_margin': 0.1,
                'negative_margin': 1.4,
                'positive_optimal': 0.1,
                'negative_optimal': 1.4,
                'log_scale': 24,
                'positive_overlap': 0.1,
            },
            'fine_loss': {
                'positive_radius': 0.05,
            },
        },
    },
    'val_dataset': {
        'class': SingleTemporalPCRDataset,
        'args': {
            'data_root': './data/datasets/soft_links/ivision-pcr-data',
            'cache_filepath': './data/datasets/soft_links/ivision-pcr-data/../single_temporal_pcr_cache.json',
            'split': 'val',
            'dataset_size': 1000,
            'rotation_mag': 45.0,
            'translation_mag': 0.5,
            'matching_radius': 0.05,
            'overlap_range': (0.0, 1.0),
            'min_points': 512,
            'transforms_cfg': {
                'class': Compose,
                'args': {
                    'transforms': [{
    'op': {
        'class': Clamp,
        'args': {
            'max_points': 8192,
        },
    },
    'input_names': [('inputs', 'src_pc'), ('inputs', 'tgt_pc')],
}],
                },
            },
            'overlap': 1.0,
        },
    },
    'val_dataloader': {
        'class': GeoTransformerDataloader,
        'args': {
            'batch_size': 1,
            'num_workers': 4,
            'num_stages': 4,
            'voxel_size': 0.1,
            'search_radius': 0.25,
        },
    },
    'test_dataset': None,
    'test_dataloader': None,
    'metric': {
        'class': GeoTransformerMetric,
        'args': {
            'acceptance_overlap': 0.0,
            'acceptance_radius': 0.1,
            'inlier_ratio_threshold': 0.05,
            'rmse_threshold': 0.2,
            'rre_threshold': 15.0,
            'rte_threshold': 0.3,
        },
    },
    'model': {
        'class': GeoTransformer,
        'args': {
            'model': {
                'ground_truth_matching_radius': 0.05,
                'num_points_in_patch': 32,
                'num_sinkhorn_iterations': 100,
            },
            'backbone': {
                'num_stages': 4,
                'init_voxel_size': 0.025,
                'kernel_size': 15,
                'base_radius': 2.5,
                'base_sigma': 2.0,
                'init_radius': 0.0625,
                'init_sigma': 0.05,
                'group_norm': 32,
                'input_dim': 1,
                'init_dim': 64,
                'output_dim': 256,
            },
            'geotransformer': {
                'input_dim': 1024,
                'hidden_dim': 256,
                'output_dim': 256,
                'num_heads': 4,
                'blocks': ['self', 'cross', 'self', 'cross', 'self', 'cross'],
                'sigma_d': 0.2,
                'sigma_a': 15,
                'angle_k': 3,
                'reduction_a': 'max',
            },
            'coarse_matching': {
                'num_targets': 128,
                'overlap_threshold': 0.1,
                'num_correspondences': 256,
                'dual_normalization': True,
            },
            'fine_matching': {
                'topk': 3,
                'acceptance_radius': 0.1,
                'mutual': True,
                'confidence_threshold': 0.05,
                'use_dustbin': False,
                'use_global_score': False,
                'correspondence_threshold': 3,
                'correspondence_limit': None,
                'num_refinement_steps': 5,
            },
        },
    },
    'optimizer': {
        'class': SingleTaskOptimizer,
        'args': {
            'optimizer_config': {
                'class': Adam,
                'args': {
                    'params': None,
                    'lr': 0.0001,
                    'weight_decay': 1e-06,
                },
            },
        },
    },
    'scheduler': {
        'class': StepLR,
        'args': {
            'optimizer': None,
            'step_size': 1000,
            'gamma': 0.95,
        },
    },
}
