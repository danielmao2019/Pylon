# This file is automatically generated by `./configs/benchmarks/point_cloud_registration/gen.py`.
# Please do not attempt to modify manually.
from torch.optim.adam import Adam
from torch.optim.lr_scheduler import StepLR
from criteria.vision_3d.point_cloud_registration.parenet_criterion.parenet_criterion import PARENetCriterion
from data.dataloaders.parenet_dataloader import PARENetDataloader
from data.datasets.pcr_datasets.modelnet40_dataset import ModelNet40Dataset
from data.transforms.compose import Compose
from data.transforms.vision_3d.clamp import Clamp
from metrics.vision_3d.point_cloud_registration.parenet_metric.parenet_metric import PARENetMetric
from models.point_cloud_registration.parenet.parenet_model import PARENetModel
from optimizers.single_task_optimizer import SingleTaskOptimizer
from runners.supervised_single_task_trainer import SupervisedSingleTaskTrainer


config = {
    'runner': SupervisedSingleTaskTrainer,
    'work_dir': './logs/benchmarks/point_cloud_registration/modelnet40/PARENet_run_0',
    'epochs': 100,
    'init_seed': 51114888,
    'train_seeds': [12466437, 53619910, 52965186, 51677448, 83753396, 43948437, 35007663, 73344567, 38698021, 83623846, 2600021, 23582918, 54919167, 64559833, 46026030, 40698806, 37045222, 59830171, 63725529, 6936248, 57632341, 15580703, 11715699, 75275315, 75193157, 62722140, 3227693, 16846393, 80149940, 43223250, 90485852, 23122679, 40916733, 75730430, 32817880, 38155572, 35462475, 43217614, 47433990, 49648847, 14743183, 39523148, 68938610, 51181033, 45286240, 94248101, 78884746, 34556398, 75936599, 22268356, 55893372, 1967615, 33484142, 68485482, 8722760, 99633659, 75886228, 31761073, 11472011, 64144158, 33048207, 65158234, 15793644, 33159766, 46137329, 88289329, 57466962, 1371577, 12035909, 36984169, 74794076, 88001301, 65671423, 48280808, 74294269, 57173138, 37278369, 73707834, 41177469, 1959892, 80715089, 18690818, 83822274, 67742361, 79092366, 32292531, 94190289, 31988910, 87736785, 22742388, 22082809, 357432, 28689548, 99549415, 10673336, 82844215, 30158682, 85376982, 14487180, 84430776],
    'val_seeds': [48091375, 31627757, 85689321, 53808860, 57597927, 73898976, 60159286, 54567916, 41680690, 70952122, 88361358, 53100381, 11629838, 9553017, 73280363, 13113321, 2224257, 73260480, 14353968, 69230879, 81653986, 64626804, 25807398, 39940722, 45315883, 28620123, 36207794, 78335532, 71951704, 82936794, 81631293, 61034019, 56057687, 87651362, 74196194, 46166596, 60663448, 54021385, 32593213, 54370326, 18935794, 91047666, 60661675, 88082188, 42459543, 46053641, 76137821, 31702185, 47759115, 35272770, 61337917, 28595366, 75981220, 47497783, 76173376, 27372796, 35251342, 2442571, 66231905, 31179163, 69918613, 10687000, 88789937, 78128084, 621333, 37247008, 49645657, 8321317, 49076333, 33298083, 90295726, 47833617, 9004887, 42751938, 93977822, 48929861, 70180506, 57960528, 71854971, 91711246, 88504393, 16332044, 87138865, 87281921, 38346009, 11034927, 73133094, 91597352, 18120913, 69957521, 16633012, 40091622, 16783735, 77428160, 16824319, 5340416, 87410490, 96837981, 1563681, 15826228],
    'test_seed': 79888097,
    'train_dataset': {
        'class': ModelNet40Dataset,
        'args': {
            'data_root': 'data/datasets/soft_links/ModelNet40',
            'split': 'train',
            'dataset_size': 50,
            'rotation_mag': 45.0,
            'translation_mag': 0.5,
            'matching_radius': 0.05,
            'overlap_range': (0.3, 1.0),
            'min_points': 512,
            'cache_filepath': 'data/datasets/soft_links/ModelNet40/../ModelNet40_cache.json',
            'transforms_cfg': {
                'class': Compose,
                'args': {
                    'transforms': [{
    'op': {
        'class': Clamp,
        'args': {
            'max_points': 4096,
        },
    },
    'input_names': [('inputs', 'src_pc'), ('inputs', 'tgt_pc')],
}],
                },
            },
        },
    },
    'train_dataloader': {
        'class': PARENetDataloader,
        'args': {
            'batch_size': 1,
            'num_workers': 4,
            'shuffle': True,
            'num_stages': 4,
            'voxel_size': 0.05,
            'subsample_ratio': 4.0,
            'num_neighbors': [32, 32, 32, 32],
            'precompute_data': True,
        },
    },
    'criterion': {
        'class': PARENetCriterion,
        'args': {
            'coarse_positive_margin': 0.1,
            'coarse_negative_margin': 1.4,
            'coarse_positive_optimal': 0.1,
            'coarse_negative_optimal': 1.4,
            'coarse_log_scale': 10.0,
            'coarse_positive_overlap': 0.1,
            'fine_positive_radius': 0.1,
            'fine_negative_radius': 0.1,
            'fine_positive_margin': 0.05,
            'fine_negative_margin': 0.2,
            'weight_coarse_loss': 1.0,
            'weight_fine_ri_loss': 1.0,
            'weight_fine_re_loss': 1.0,
        },
    },
    'val_dataset': {
        'class': ModelNet40Dataset,
        'args': {
            'data_root': 'data/datasets/soft_links/ModelNet40',
            'split': 'test',
            'dataset_size': 500,
            'rotation_mag': 45.0,
            'translation_mag': 0.5,
            'matching_radius': 0.05,
            'overlap_range': (0.3, 1.0),
            'min_points': 512,
            'cache_filepath': 'data/datasets/soft_links/ModelNet40/../ModelNet40_cache.json',
            'transforms_cfg': {
                'class': Compose,
                'args': {
                    'transforms': [{
    'op': {
        'class': Clamp,
        'args': {
            'max_points': 4096,
        },
    },
    'input_names': [('inputs', 'src_pc'), ('inputs', 'tgt_pc')],
}],
                },
            },
        },
    },
    'val_dataloader': {
        'class': PARENetDataloader,
        'args': {
            'batch_size': 1,
            'num_workers': 4,
            'shuffle': False,
            'num_stages': 4,
            'voxel_size': 0.05,
            'subsample_ratio': 4.0,
            'num_neighbors': [32, 32, 32, 32],
            'precompute_data': True,
        },
    },
    'test_dataset': None,
    'test_dataloader': None,
    'metric': {
        'class': PARENetMetric,
        'args': {
            'inlier_threshold': 0.1,
            'acceptance_overlap': 0.1,
            'acceptance_radius': 0.1,
            'rmse_threshold': 0.2,
            'feat_rre_threshold': 30.0,
        },
    },
    'model': {
        'class': PARENetModel,
        'args': {
            'num_points_in_patch': 32,
            'ground_truth_matching_radius': 0.05,
            'backbone_init_dim': 96,
            'backbone_output_dim': 256,
            'backbone_kernel_size': 4,
            'backbone_share_nonlinearity': False,
            'backbone_conv_way': 'edge_conv',
            'backbone_use_xyz': True,
            'use_encoder_re_feats': True,
            'geotransformer_input_dim': 768,
            'geotransformer_output_dim': 128,
            'geotransformer_hidden_dim': 96,
            'geotransformer_num_heads': 4,
            'geotransformer_blocks': ['self', 'cross', 'self', 'cross', 'self', 'cross'],
            'geotransformer_sigma_d': 4.8,
            'geotransformer_sigma_a': 15,
            'geotransformer_angle_k': 3,
            'geotransformer_reduction_a': 'max',
            'coarse_matching_num_targets': 128,
            'coarse_matching_overlap_threshold': 0.1,
            'coarse_matching_num_correspondences': 256,
            'coarse_matching_dual_normalization': True,
            'fine_matching_topk': 2,
            'fine_matching_acceptance_radius': 0.6,
            'fine_matching_confidence_threshold': 0.005,
            'fine_matching_num_hypotheses': 1000,
            'fine_matching_num_refinement_steps': 5,
        },
    },
    'optimizer': {
        'class': SingleTaskOptimizer,
        'args': {
            'optimizer_config': {
                'class': Adam,
                'args': {
                    'params': None,
                    'lr': 0.001,
                    'weight_decay': 1e-06,
                },
            },
        },
    },
    'scheduler': {
        'class': StepLR,
        'args': {
            'optimizer': None,
            'step_size': 1000.0,
            'gamma': 0.95,
        },
    },
}
