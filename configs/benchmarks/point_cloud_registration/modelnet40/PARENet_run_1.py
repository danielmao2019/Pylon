# This file is automatically generated by `./configs/benchmarks/point_cloud_registration/gen.py`.
# Please do not attempt to modify manually.
from torch.optim.adam import Adam
from torch.optim.lr_scheduler import StepLR
from criteria.vision_3d.point_cloud_registration.parenet_criterion.parenet_criterion import PARENetCriterion
from data.dataloaders.parenet_dataloader import PARENetDataloader
from data.datasets.pcr_datasets.modelnet40_dataset import ModelNet40Dataset
from data.transforms.compose import Compose
from data.transforms.vision_3d.clamp import Clamp
from metrics.vision_3d.point_cloud_registration.parenet_metric.parenet_metric import PARENetMetric
from models.point_cloud_registration.parenet.parenet_model import PARENetModel
from optimizers.single_task_optimizer import SingleTaskOptimizer
from runners.supervised_single_task_trainer import SupervisedSingleTaskTrainer


config = {
    'runner': SupervisedSingleTaskTrainer,
    'work_dir': './logs/benchmarks/point_cloud_registration/modelnet40/PARENet_run_1',
    'epochs': 100,
    'init_seed': 89243601,
    'train_seeds': [70614130, 6430576, 29493247, 2919102, 33004117, 51495751, 54804657, 1308392, 18826758, 8604159, 72251844, 52195478, 18660653, 83453469, 75911542, 98507830, 55138503, 27810147, 54535738, 52171217, 93834407, 14215164, 73735823, 16507200, 35461833, 28804638, 10370947, 64755970, 84623251, 12580994, 8836994, 17078189, 76106352, 36023864, 75450076, 79620755, 20255986, 88857372, 88686656, 84683682, 71536752, 58559850, 14651895, 3973347, 64224175, 12804755, 92287732, 91975813, 9285117, 50959169, 86750484, 77311049, 44186641, 33511741, 9018864, 34088036, 95751691, 15075745, 40797116, 5010181, 22228889, 14214177, 27428561, 79869610, 25343279, 85865020, 90072256, 52961674, 39597531, 44488460, 22170866, 44162064, 29187703, 88914254, 20290038, 85499745, 65698351, 35944140, 44140022, 2624455, 18171552, 82654996, 86279856, 18081189, 79366257, 93469880, 908110, 73978584, 52800791, 26796476, 63909716, 27033667, 72199237, 64140915, 30819511, 55906413, 47938785, 41021274, 17763450, 51880776],
    'val_seeds': [14053663, 58335925, 61863417, 39584893, 72847812, 22620525, 61224288, 61221562, 84913369, 19807241, 13223263, 56130861, 72258875, 53057635, 66639972, 6825610, 27679876, 66118631, 25600382, 51978923, 51842046, 40964564, 35065987, 46990140, 2629280, 82648328, 21256080, 94424341, 25881689, 33883902, 80642931, 44153310, 40279735, 1206489, 88254595, 98915363, 44700351, 20638671, 35235654, 11441325, 94684285, 55263145, 78534381, 18024240, 80378554, 24418324, 32515259, 39785708, 79132593, 34192404, 70602444, 68652737, 41745256, 64064650, 963482, 20898911, 16945949, 67233206, 69043150, 56836404, 47330257, 60250077, 5242935, 9193679, 59863844, 9264193, 88018956, 61951226, 87457874, 57375540, 92366744, 53854489, 19089385, 12335693, 25766007, 47332109, 21069749, 97667911, 20983608, 70135019, 40028916, 34682516, 83572436, 79765373, 2524936, 39764449, 20019788, 32863806, 56113500, 74815322, 25593227, 74746817, 74327456, 24822166, 91161497, 42736585, 33117152, 17863133, 78365212, 40898819],
    'test_seed': 91568107,
    'train_dataset': {
        'class': ModelNet40Dataset,
        'args': {
            'data_root': 'data/datasets/soft_links/ModelNet40',
            'split': 'train',
            'dataset_size': 50,
            'rotation_mag': 45.0,
            'translation_mag': 0.5,
            'matching_radius': 0.05,
            'overlap_range': (0.3, 1.0),
            'min_points': 512,
            'cache_filepath': 'data/datasets/soft_links/ModelNet40/../ModelNet40_cache.json',
            'transforms_cfg': {
                'class': Compose,
                'args': {
                    'transforms': [{
    'op': {
        'class': Clamp,
        'args': {
            'max_points': 4096,
        },
    },
    'input_names': [('inputs', 'src_pc'), ('inputs', 'tgt_pc')],
}],
                },
            },
        },
    },
    'train_dataloader': {
        'class': PARENetDataloader,
        'args': {
            'batch_size': 1,
            'num_workers': 4,
            'shuffle': True,
            'num_stages': 4,
            'voxel_size': 0.05,
            'subsample_ratio': 4.0,
            'num_neighbors': [32, 32, 32, 32],
            'precompute_data': True,
        },
    },
    'criterion': {
        'class': PARENetCriterion,
        'args': {
            'coarse_positive_margin': 0.1,
            'coarse_negative_margin': 1.4,
            'coarse_positive_optimal': 0.1,
            'coarse_negative_optimal': 1.4,
            'coarse_log_scale': 10.0,
            'coarse_positive_overlap': 0.1,
            'fine_positive_radius': 0.1,
            'fine_negative_radius': 0.1,
            'fine_positive_margin': 0.05,
            'fine_negative_margin': 0.2,
            'weight_coarse_loss': 1.0,
            'weight_fine_ri_loss': 1.0,
            'weight_fine_re_loss': 1.0,
        },
    },
    'val_dataset': {
        'class': ModelNet40Dataset,
        'args': {
            'data_root': 'data/datasets/soft_links/ModelNet40',
            'split': 'test',
            'dataset_size': 500,
            'rotation_mag': 45.0,
            'translation_mag': 0.5,
            'matching_radius': 0.05,
            'overlap_range': (0.3, 1.0),
            'min_points': 512,
            'cache_filepath': 'data/datasets/soft_links/ModelNet40/../ModelNet40_cache.json',
            'transforms_cfg': {
                'class': Compose,
                'args': {
                    'transforms': [{
    'op': {
        'class': Clamp,
        'args': {
            'max_points': 4096,
        },
    },
    'input_names': [('inputs', 'src_pc'), ('inputs', 'tgt_pc')],
}],
                },
            },
        },
    },
    'val_dataloader': {
        'class': PARENetDataloader,
        'args': {
            'batch_size': 1,
            'num_workers': 4,
            'shuffle': False,
            'num_stages': 4,
            'voxel_size': 0.05,
            'subsample_ratio': 4.0,
            'num_neighbors': [32, 32, 32, 32],
            'precompute_data': True,
        },
    },
    'test_dataset': None,
    'test_dataloader': None,
    'metric': {
        'class': PARENetMetric,
        'args': {
            'inlier_threshold': 0.1,
            'acceptance_overlap': 0.1,
            'acceptance_radius': 0.1,
            'rmse_threshold': 0.2,
            'feat_rre_threshold': 30.0,
        },
    },
    'model': {
        'class': PARENetModel,
        'args': {
            'num_points_in_patch': 32,
            'ground_truth_matching_radius': 0.05,
            'backbone_init_dim': 96,
            'backbone_output_dim': 256,
            'backbone_kernel_size': 4,
            'backbone_share_nonlinearity': False,
            'backbone_conv_way': 'edge_conv',
            'backbone_use_xyz': True,
            'use_encoder_re_feats': True,
            'geotransformer_input_dim': 768,
            'geotransformer_output_dim': 128,
            'geotransformer_hidden_dim': 96,
            'geotransformer_num_heads': 4,
            'geotransformer_blocks': ['self', 'cross', 'self', 'cross', 'self', 'cross'],
            'geotransformer_sigma_d': 4.8,
            'geotransformer_sigma_a': 15,
            'geotransformer_angle_k': 3,
            'geotransformer_reduction_a': 'max',
            'coarse_matching_num_targets': 128,
            'coarse_matching_overlap_threshold': 0.1,
            'coarse_matching_num_correspondences': 256,
            'coarse_matching_dual_normalization': True,
            'fine_matching_topk': 2,
            'fine_matching_acceptance_radius': 0.6,
            'fine_matching_confidence_threshold': 0.005,
            'fine_matching_num_hypotheses': 1000,
            'fine_matching_num_refinement_steps': 5,
        },
    },
    'optimizer': {
        'class': SingleTaskOptimizer,
        'args': {
            'optimizer_config': {
                'class': Adam,
                'args': {
                    'params': None,
                    'lr': 0.001,
                    'weight_decay': 1e-06,
                },
            },
        },
    },
    'scheduler': {
        'class': StepLR,
        'args': {
            'optimizer': None,
            'step_size': 1000.0,
            'gamma': 0.95,
        },
    },
}
