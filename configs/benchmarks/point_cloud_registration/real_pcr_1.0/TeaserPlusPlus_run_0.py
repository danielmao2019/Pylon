# This file is automatically generated by `./configs/benchmarks/point_cloud_registration/gen.py`.
# Please do not attempt to modify manually.
from torch.utils.data.dataloader import DataLoader
from data.datasets.pcr_datasets.real_pcr_dataset import RealPCRDataset
from data.transforms.compose import Compose
from data.transforms.vision_3d.pcr_translation import PCRTranslation
from metrics.vision_3d.point_cloud_registration.isotropic_transform_error import IsotropicTransformError
from metrics.vision_3d.point_cloud_registration.transform_inlier_ratio import TransformInlierRatio
from metrics.wrappers.hybrid_metric import HybridMetric
from models.point_cloud_registration.classic.teaserplusplus import TeaserPlusPlus
from runners.base_evaluator import BaseEvaluator


config = {
    'runner': BaseEvaluator,
    'work_dir': './logs/benchmarks/point_cloud_registration/real_pcr_1.0/TeaserPlusPlus_run_0',
    'seed': 65827388,
    'eval_dataset': {
        'class': RealPCRDataset,
        'args': {
            'data_root': './data/datasets/soft_links/ivision-pcr-data',
            'gt_transforms_filepath': './data/datasets/soft_links/ivision-pcr-data/gt_transforms.json',
            'cache_dirname': 'real_pcr_cache',
            'split': 'val',
            'voxel_size': 10.0,
            'min_points': 512,
            'max_points': 8192,
            'overlap': 1.0,
            'device': 'cpu',
            'transforms_cfg': {
                'class': Compose,
                'args': {
                    'transforms': [(
    {
            'class': PCRTranslation,
            'args': {},
        },
    [('inputs', 'src_pc'), ('inputs', 'tgt_pc'), ('labels', 'transform')]
)],
                },
            },
        },
    },
    'eval_dataloader': {
        'class': DataLoader,
        'args': {
            'batch_size': 1,
            'num_workers': 4,
        },
    },
    'metric': {
        'class': HybridMetric,
        'args': {
            'metrics_cfg': [{
    'class': IsotropicTransformError,
    'args': {
        'use_buffer': False,
    },
}, {
    'class': TransformInlierRatio,
    'args': {
        'threshold': 0.3,
        'use_buffer': False,
    },
}],
        },
    },
    'model': {
        'class': TeaserPlusPlus,
        'args': {
            'estimate_rotation': False,
            'estimate_scaling': False,
            'correspondences': 'fpfh',
            'voxel_size': 0.05,
        },
    },
    'eval_n_jobs': 1,
}
