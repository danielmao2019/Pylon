# This file is automatically generated by `./configs/benchmarks/point_cloud_registration/gen.py`.
# Please do not attempt to modify manually.
from torch.utils.data.dataloader import DataLoader
from data.datasets.pcr_datasets.bi_temporal_pcr_dataset import BiTemporalPCRDataset
from data.transforms.compose import Compose
from data.transforms.vision_3d.clamp import Clamp
from metrics.vision_3d.point_cloud_registration.isotropic_transform_error import IsotropicTransformError
from metrics.vision_3d.point_cloud_registration.transform_inlier_ratio import TransformInlierRatio
from metrics.wrappers.hybrid_metric import HybridMetric
from models.point_cloud_registration.classic.icp import ICP
from runners.base_evaluator import BaseEvaluator


config = {
    'runner': BaseEvaluator,
    'work_dir': './logs/benchmarks/point_cloud_registration/bi_temporal_pcr_0.4/ICP_run_0',
    'seed': 14006133,
    'eval_dataset': {
        'class': BiTemporalPCRDataset,
        'args': {
            'data_root': './data/datasets/soft_links/ivision-pcr-data',
            'gt_transforms': './data/datasets/soft_links/ivision-pcr-data/gt_transforms.json',
            'cache_filepath': './data/datasets/soft_links/ivision-pcr-data/../bi_temporal_pcr_cache.json',
            'split': 'val',
            'dataset_size': 500,
            'rotation_mag': 45.0,
            'translation_mag': 0.5,
            'matching_radius': 0.05,
            'overlap_range': (0.0, 1.0),
            'min_points': 512,
            'device': 'cpu',
            'transforms_cfg': {
                'class': Compose,
                'args': {
                    'transforms': [{
    'op': {
        'class': Clamp,
        'args': {
            'max_points': 8192,
        },
    },
    'input_names': [('inputs', 'src_pc'), ('inputs', 'tgt_pc')],
}],
                },
            },
            'overlap': 0.4,
        },
    },
    'eval_dataloader': {
        'class': DataLoader,
        'args': {
            'batch_size': 1,
            'num_workers': 4,
        },
    },
    'metric': {
        'class': HybridMetric,
        'args': {
            'metrics_cfg': [{
    'class': IsotropicTransformError,
    'args': {
        'use_buffer': False,
    },
}, {
    'class': TransformInlierRatio,
    'args': {
        'threshold': 0.3,
        'use_buffer': False,
    },
}],
        },
    },
    'model': {
        'class': ICP,
        'args': {},
    },
    'eval_n_jobs': 32,
}
