# This file is automatically generated by `./configs/benchmarks/change_detection/gen_bi_temporal.py`.
# Please do not attempt to modify manually.
from torch import Tensor
from torch.optim.lr_scheduler import PolynomialLR
from torch.optim.sgd import SGD
from torch.utils.data.dataloader import DataLoader
from torchvision.transforms.transforms import ColorJitter
from criteria.vision_2d.change_detection.dsamnet_criterion import DSAMNetCriterion
from data.collators.base_collator import BaseCollator
from data.datasets.change_detection_datasets.bi_temporal.air_change_dataset import AirChangeDataset
from data.transforms.compose import Compose
from data.transforms.randomize import Randomize
from data.transforms.torchvision_wrapper import TorchvisionWrapper
from data.transforms.vision_2d.crop.random_crop import RandomCrop
from data.transforms.vision_2d.flip import Flip
from data.transforms.vision_2d.random_rotation import RandomRotation
from data.transforms.vision_2d.resize.maps import ResizeMaps
from metrics.vision_2d.semantic_segmentation_metric import SemanticSegmentationMetric
from models.change_detection.dsamnet.dsamnet import DSAMNet
from optimizers.single_task_optimizer import SingleTaskOptimizer
from runners.trainers.supervised_single_task_trainer import SupervisedSingleTaskTrainer


config = {
    'runner': SupervisedSingleTaskTrainer,
    'work_dir': './logs/benchmarks/change_detection/air_change/DSAMNet_run_2',
    'epochs': 100,
    'init_seed': 59183827,
    'train_seeds': [62722339, 67284959, 84154863, 66520278, 92966304, 16854277, 20605639, 15978234, 68642997, 20147554, 80903760, 3298932, 5691899, 94986385, 44803408, 14109276, 91770754, 94225848, 48343630, 65781861, 18901695, 36058052, 84374349, 87221739, 94892946, 50933771, 54304633, 11587180, 13954011, 38629750, 90610975, 61840434, 11869734, 89375985, 90764120, 30089565, 83589, 90613154, 42428953, 66701624, 65646330, 40412914, 8530052, 32526419, 59646874, 13549512, 93723879, 14264051, 43730698, 80193565, 30738626, 83064655, 3935494, 40205399, 58485033, 39674036, 37544278, 80916523, 53492387, 53051698, 6096697, 98870847, 72846264, 35026695, 61673688, 30305111, 64070058, 66697630, 90304786, 86714226, 99238615, 15091426, 10145194, 76440134, 41067453, 18474051, 92312110, 80860584, 1481939, 85783794, 84007931, 31055728, 98860309, 13046919, 57151415, 54668949, 16649019, 51308089, 44609352, 99766816, 280953, 63980181, 18816237, 74698166, 34708225, 73981727, 86960031, 34976609, 88297261, 11856208],
    'val_seeds': [48565212, 3072749, 34466801, 63639924, 60221550, 42128954, 12521815, 98858665, 51175266, 54024979, 83061594, 27651036, 33962094, 83051421, 20334187, 37601601, 62595305, 4158778, 40890335, 50366207, 79963749, 41192568, 20123293, 36500626, 12754762, 6068796, 19965384, 33361602, 6941784, 66960958, 39153878, 48858810, 53166597, 22422465, 74498453, 87600482, 42623711, 73711057, 74954258, 67211307, 74558706, 82023191, 10415568, 8585500, 66543047, 78066277, 82086515, 52130731, 64415884, 84368605, 58202219, 39610498, 32682691, 23648987, 29376281, 31394232, 12284058, 89596213, 98430524, 43684449, 49835771, 96497514, 26655251, 78041419, 85728590, 61509244, 87079852, 80115814, 28133945, 54957427, 21781811, 27407577, 46931545, 83255826, 20221894, 45004567, 39309355, 97420787, 10546097, 1473150, 15824354, 81587054, 84056020, 33298817, 57703276, 66599086, 50688803, 13982355, 96634260, 64347331, 39583860, 87756436, 10394700, 6948933, 5273218, 58009306, 38766776, 13993580, 51700709, 95324458],
    'test_seed': 74634998,
    'train_dataset': {
        'class': AirChangeDataset,
        'args': {
            'data_root': './data/datasets/soft_links/AirChange',
            'split': 'train',
            'transforms_cfg': {
                'class': Compose,
                'args': {
                    'transforms': [(
    {
            'class': ResizeMaps,
            'args': {
                'size': (224, 224),
                'interpolation': None,
                'antialias': True,
            },
        },
    [('inputs', 'img_1'), ('inputs', 'img_2'), ('labels', 'change_map')]
), (
    {
            'class': RandomRotation,
            'args': {
                'choices': [0, 90, 180, 270],
            },
        },
    [('inputs', 'img_1'), ('inputs', 'img_2'), ('labels', 'change_map')]
), (
    {
            'class': Randomize,
            'args': {
                'transform': {
                    'class': Flip,
                    'args': {
                        'axis': -1,
                    },
                },
                'p': 0.5,
            },
        },
    [('inputs', 'img_1'), ('inputs', 'img_2'), ('labels', 'change_map')]
), (
    {
            'class': Randomize,
            'args': {
                'transform': {
                    'class': Flip,
                    'args': {
                        'axis': -2,
                    },
                },
                'p': 0.5,
            },
        },
    [('inputs', 'img_1'), ('inputs', 'img_2'), ('labels', 'change_map')]
), (
    {
            'class': Randomize,
            'args': {
                'transform': {
                    'class': TorchvisionWrapper,
                    'args': {
                        'transform_class': ColorJitter,
                        'brightness': 0.5,
                        'contrast': 0.5,
                        'saturation': 0.5,
                    },
                },
                'p': 0.5,
            },
        },
    ('inputs', 'img_1')
), (
    {
            'class': Randomize,
            'args': {
                'transform': {
                    'class': TorchvisionWrapper,
                    'args': {
                        'transform_class': ColorJitter,
                        'brightness': 0.5,
                        'contrast': 0.5,
                        'saturation': 0.5,
                    },
                },
                'p': 0.5,
            },
        },
    ('inputs', 'img_2')
)],
                },
            },
        },
    },
    'train_dataloader': {
        'class': DataLoader,
        'args': {
            'batch_size': 4,
            'num_workers': 4,
            'collate_fn': {
                'class': BaseCollator,
                'args': {
                    'collators': {
                        'meta_info': {
                            'image_size': Tensor,
                            'crop_loc': Tensor,
                            'crop_size': Tensor,
                        },
                    },
                },
            },
        },
    },
    'criterion': {
        'class': DSAMNetCriterion,
        'args': {
            'dice_weight': 0.1,
        },
    },
    'val_dataset': {
        'class': AirChangeDataset,
        'args': {
            'data_root': './data/datasets/soft_links/AirChange',
            'split': 'test',
            'transforms_cfg': {
                'class': Compose,
                'args': {
                    'transforms': [(
    {
            'class': RandomCrop,
            'args': {
                'size': (112, 112),
                'resize': (224, 224),
                'interpolation': None,
            },
        },
    [('inputs', 'img_1'), ('inputs', 'img_2'), ('labels', 'change_map')]
)],
                },
            },
        },
    },
    'val_dataloader': {
        'class': DataLoader,
        'args': {
            'batch_size': 1,
            'num_workers': 4,
            'collate_fn': {
                'class': BaseCollator,
                'args': {
                    'collators': {
                        'meta_info': {
                            'image_size': Tensor,
                            'crop_loc': Tensor,
                            'crop_size': Tensor,
                        },
                    },
                },
            },
        },
    },
    'test_dataset': None,
    'test_dataloader': None,
    'metric': {
        'class': SemanticSegmentationMetric,
        'args': {
            'num_classes': 2,
        },
    },
    'model': {
        'class': DSAMNet,
        'args': {},
    },
    'optimizer': {
        'class': SingleTaskOptimizer,
        'args': {
            'optimizer_config': {
                'class': SGD,
                'args': {
                    'lr': 0.001,
                    'momentum': 0.9,
                    'weight_decay': 0.0001,
                },
            },
        },
    },
    'scheduler': {
        'class': PolynomialLR,
        'args': {
            'optimizer': None,
            'total_iters': None,
            'power': 0.9,
        },
    },
}
