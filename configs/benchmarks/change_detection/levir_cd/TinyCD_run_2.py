# This file is automatically generated by `./configs/benchmarks/change_detection/gen_bi_temporal.py`.
# Please do not attempt to modify manually.
from configs.common.datasets.change_detection.val._transforms_cfg import transforms_cfg
from torch import Tensor
from torch.optim.lr_scheduler import PolynomialLR
from torch.optim.sgd import SGD
from torch.utils.data.dataloader import DataLoader
from torchvision.transforms.transforms import ColorJitter
from criteria.vision_2d.dense_prediction.dense_classification.semantic_segmentation import SemanticSegmentationCriterion
from data.collators.base_collator import BaseCollator
from data.datasets.change_detection_datasets.bi_temporal.levir_cd_dataset import LevirCdDataset
from data.transforms.compose import Compose
from data.transforms.randomize import Randomize
from data.transforms.vision_2d.crop.random_crop import RandomCrop
from data.transforms.vision_2d.flip import Flip
from data.transforms.vision_2d.random_rotation import RandomRotation
from metrics.vision_2d.semantic_segmentation_metric import SemanticSegmentationMetric
from models.change_detection.tiny_cd.tiny_cd_model import TinyCD
from optimizers.single_task_optimizer import SingleTaskOptimizer
from runners.supervised_single_task_trainer import SupervisedSingleTaskTrainer


config = {
    'runner': SupervisedSingleTaskTrainer,
    'work_dir': './logs/benchmarks/change_detection/levir_cd/TinyCD_run_2',
    'epochs': 100,
    'init_seed': 28896403,
    'train_seeds': [81613822, 65533439, 17892967, 76120045, 84676015, 76215137, 43432514, 21776681, 35974420, 89325725, 17724019, 30262536, 56120685, 26428061, 76160310, 26342669, 49486639, 91040373, 95226301, 49914856, 30385925, 87478411, 64524560, 39023160, 91730606, 12104851, 96279430, 14754082, 89019192, 24575571, 80961308, 56646548, 72547875, 62194247, 84069638, 75772368, 8917510, 8131200, 84230472, 39071136, 40133123, 69951392, 16441706, 72944697, 97312856, 45010115, 70042381, 93771573, 30009779, 88260317, 33183654, 62259463, 93143524, 85399184, 67072476, 5990883, 7274266, 49420415, 29775954, 2639375, 47092333, 45064227, 8731119, 26132908, 83667469, 68435265, 85962279, 13787219, 76660613, 13804919, 94834228, 33093226, 48404259, 31717741, 19135151, 86326193, 61315409, 16238214, 14969274, 48738142, 48454350, 73230196, 89765677, 21735698, 93006474, 62380281, 9572639, 69087299, 57720133, 39417171, 9236298, 67994327, 44594009, 29987666, 59919008, 45994258, 60600148, 45125955, 52915304, 58978465],
    'val_seeds': [41248558, 90746466, 53819070, 82124084, 31896572, 53566858, 27991408, 81010040, 21456835, 71880083, 26430476, 39752174, 75968177, 44161206, 30556064, 44234869, 78839295, 7991631, 5325468, 89840849, 12834210, 1214876, 22716500, 14963429, 38307034, 66585829, 92066771, 68724431, 62752787, 41914010, 86116383, 75445451, 99166552, 50584141, 1507954, 77953722, 55945109, 15139067, 62326651, 7012695, 55983080, 75461431, 21095865, 17354817, 56511931, 43446726, 4678343, 66523039, 13808885, 88046535, 49983512, 44372239, 77500485, 21391394, 6238165, 74305932, 29807973, 68861968, 12444181, 28389959, 91738919, 58013677, 58387054, 95906772, 77605839, 58355806, 47027754, 36151738, 74073596, 34488050, 18395032, 59624419, 19215391, 97023449, 72462465, 43465713, 68296602, 27363214, 39856867, 99854368, 51527434, 53256061, 33722825, 19448021, 53352931, 82724781, 13345463, 31572029, 75830028, 32425208, 93826859, 820575, 71635148, 69700822, 65082024, 73319579, 94136365, 1137176, 59408763, 63878531],
    'test_seed': 68380093,
    'train_dataset': {
        'class': LevirCdDataset,
        'args': {
            'data_root': './data/datasets/soft_links/LEVIR-CD',
            'split': 'train',
            'transforms_cfg': {
                'class': Compose,
                'args': {
                    'transforms': [(
    {
            'class': RandomCrop,
            'args': {
                'size': (224, 224),
                'resize': None,
                'interpolation': None,
            },
        },
    [('inputs', 'img_1'), ('inputs', 'img_2'), ('labels', 'change_map')]
), (
    {
            'class': RandomRotation,
            'args': {
                'choices': [0, 90, 180, 270],
            },
        },
    [('inputs', 'img_1'), ('inputs', 'img_2'), ('labels', 'change_map')]
), (
    {
            'class': Randomize,
            'args': {
                'transform': {
                    'class': Flip,
                    'args': {
                        'axis': -1,
                    },
                },
                'p': 0.5,
            },
        },
    [('inputs', 'img_1'), ('inputs', 'img_2'), ('labels', 'change_map')]
), (
    {
            'class': Randomize,
            'args': {
                'transform': {
                    'class': Flip,
                    'args': {
                        'axis': -2,
                    },
                },
                'p': 0.5,
            },
        },
    [('inputs', 'img_1'), ('inputs', 'img_2'), ('labels', 'change_map')]
), (
    {
            'class': Randomize,
            'args': {
                'transform': {
                    'class': ColorJitter,
                    'args': {
                        'brightness': 0.5,
                        'contrast': 0.5,
                        'saturation': 0.5,
                    },
                },
                'p': 0.5,
            },
        },
    ('inputs', 'img_1')
), (
    {
            'class': Randomize,
            'args': {
                'transform': {
                    'class': ColorJitter,
                    'args': {
                        'brightness': 0.5,
                        'contrast': 0.5,
                        'saturation': 0.5,
                    },
                },
                'p': 0.5,
            },
        },
    ('inputs', 'img_2')
)],
                },
            },
        },
    },
    'train_dataloader': {
        'class': DataLoader,
        'args': {
            'batch_size': 4,
            'num_workers': 4,
            'collate_fn': {
                'class': BaseCollator,
                'args': {
                    'collators': {
                        'meta_info': {
                            'image_resolution': Tensor,
                        },
                    },
                },
            },
        },
    },
    'criterion': {
        'class': SemanticSegmentationCriterion,
        'args': {
            'class_weights': (0.09177704155445099, 1.908223032951355),
            'use_buffer': False,
        },
    },
    'val_dataset': {
        'class': LevirCdDataset,
        'args': {
            'data_root': './data/datasets/soft_links/LEVIR-CD',
            'split': 'val',
            'transforms_cfg': {
                'class': Compose,
                'args': {
                    'transforms': [(
    {
            'class': RandomCrop,
            'args': {
                'size': (224, 224),
                'resize': None,
                'interpolation': None,
            },
        },
    [('inputs', 'img_1'), ('inputs', 'img_2'), ('labels', 'change_map')]
)],
                },
            },
        },
    },
    'val_dataloader': {
        'class': DataLoader,
        'args': {
            'batch_size': 1,
            'num_workers': 4,
            'collate_fn': {
                'class': BaseCollator,
                'args': {
                    'collators': {
                        'meta_info': {
                            'image_resolution': Tensor,
                        },
                    },
                },
            },
        },
    },
    'test_dataset': {
        'class': LevirCdDataset,
        'args': {
            'data_root': './data/datasets/soft_links/LEVIR-CD',
            'split': 'test',
            'transforms_cfg': transforms_cfg,
        },
    },
    'test_dataloader': {
        'class': DataLoader,
        'args': {
            'batch_size': 1,
            'num_workers': 4,
            'collate_fn': {
                'class': BaseCollator,
                'args': {
                    'collators': {
                        'meta_info': {
                            'image_resolution': Tensor,
                        },
                    },
                },
            },
        },
    },
    'metric': {
        'class': SemanticSegmentationMetric,
        'args': {
            'num_classes': 2,
        },
    },
    'model': {
        'class': TinyCD,
        'args': {},
    },
    'optimizer': {
        'class': SingleTaskOptimizer,
        'args': {
            'optimizer_config': {
                'class': SGD,
                'args': {
                    'lr': 0.001,
                    'momentum': 0.9,
                    'weight_decay': 0.0001,
                },
            },
        },
    },
    'scheduler': {
        'class': PolynomialLR,
        'args': {
            'optimizer': None,
            'total_iters': None,
            'power': 0.9,
        },
    },
}
