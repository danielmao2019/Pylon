# This file is automatically generated by `./configs/benchmarks/change_detection/gen_bi_temporal.py`.
# Please do not attempt to modify manually.
from torch.optim.lr_scheduler import PolynomialLR
from torch.optim.sgd import SGD
from torch.utils.data.dataloader import DataLoader
from torchvision.transforms.transforms import ColorJitter
from criteria.vision_2d.dense_prediction.dense_classification.semantic_segmentation import SemanticSegmentationCriterion
from data.collators.base_collator import BaseCollator
from data.datasets.change_detection_datasets.bi_temporal.sysu_cd_dataset import SYSU_CD_Dataset
from data.transforms.compose import Compose
from data.transforms.randomize import Randomize
from data.transforms.torchvision_wrapper import TorchvisionWrapper
from data.transforms.vision_2d.crop.random_crop import RandomCrop
from data.transforms.vision_2d.flip import Flip
from data.transforms.vision_2d.random_rotation import RandomRotation
from metrics.vision_2d.semantic_segmentation_metric import SemanticSegmentationMetric
from models.change_detection.tiny_cd.tiny_cd_model import TinyCD
from optimizers.single_task_optimizer import SingleTaskOptimizer
from runners.supervised_single_task_trainer import SupervisedSingleTaskTrainer


config = {
    'runner': SupervisedSingleTaskTrainer,
    'work_dir': './logs/benchmarks/change_detection/sysu_cd/TinyCD_run_2',
    'epochs': 100,
    'init_seed': 30070509,
    'train_seeds': [66706792, 57134929, 92474690, 86537101, 28128978, 57360167, 31009394, 11786558, 14432248, 65071380, 33724409, 7432459, 84497618, 56014884, 5903580, 80512637, 59516738, 96722648, 65939932, 144389, 11521204, 38797862, 26821586, 76051666, 94522788, 55973557, 58676557, 5306850, 70331610, 54956644, 15198187, 67235369, 4253655, 67946489, 74172997, 98136123, 99832670, 14959083, 80119174, 94894639, 65207472, 66539342, 80347333, 22576322, 53077860, 90877862, 30580910, 96529329, 16174934, 66718753, 90359655, 22345614, 95606420, 69647346, 79785909, 70074933, 6895233, 1303622, 93652135, 80911599, 46673382, 1153103, 99638266, 43707087, 67808583, 94918479, 1948568, 45392463, 90636426, 79977766, 78593094, 52219640, 75376089, 25002841, 17371703, 26896469, 30265848, 48562179, 87463141, 80583321, 27354209, 43714001, 2347152, 5584633, 95766893, 15521660, 80013719, 628961, 30981811, 53203751, 59396326, 95444367, 24009329, 92405868, 69606599, 97115767, 90016510, 15000065, 47482812, 56685011],
    'val_seeds': [15744205, 85948103, 41852513, 6766465, 88512565, 58755494, 30288645, 3824550, 96511079, 55388039, 81476834, 77050733, 5852175, 59752197, 71663448, 10559062, 30811746, 59683287, 17835980, 28106164, 86837805, 12572979, 3693999, 57529801, 14175396, 41099173, 38904515, 92958968, 70102759, 132504, 69410139, 33150048, 59827550, 73679072, 55430892, 67486954, 93455897, 38225597, 85359561, 33551150, 21570518, 80417795, 80341608, 99813502, 86581751, 53930106, 32701913, 2708328, 57313476, 79033007, 24467312, 59782115, 65446517, 874126, 18576432, 35470941, 35363478, 71376366, 11070900, 71049389, 38284861, 23294969, 98812664, 82796437, 80112137, 74028350, 95852390, 25392928, 70330841, 24859761, 25547296, 27996999, 40628752, 55589148, 43298150, 95448653, 56553798, 23417456, 70414409, 66431960, 56942487, 54901178, 53146723, 13131622, 83625723, 42737210, 4057091, 91060856, 40705872, 13098631, 38389080, 89946926, 81930811, 19553015, 70299178, 38961602, 9715934, 54625020, 72445701, 99698037],
    'test_seed': 40261691,
    'train_dataset': {
        'class': SYSU_CD_Dataset,
        'args': {
            'data_root': './data/datasets/soft_links/SYSU-CD',
            'split': 'train',
            'transforms_cfg': {
                'class': Compose,
                'args': {
                    'transforms': [(
    {
            'class': RandomCrop,
            'args': {
                'size': (224, 224),
                'resize': None,
                'interpolation': None,
            },
        },
    [('inputs', 'img_1'), ('inputs', 'img_2'), ('labels', 'change_map')]
), (
    {
            'class': RandomRotation,
            'args': {
                'choices': [0, 90, 180, 270],
            },
        },
    [('inputs', 'img_1'), ('inputs', 'img_2'), ('labels', 'change_map')]
), (
    {
            'class': Randomize,
            'args': {
                'transform': {
                    'class': Flip,
                    'args': {
                        'axis': -1,
                    },
                },
                'p': 0.5,
            },
        },
    [('inputs', 'img_1'), ('inputs', 'img_2'), ('labels', 'change_map')]
), (
    {
            'class': Randomize,
            'args': {
                'transform': {
                    'class': Flip,
                    'args': {
                        'axis': -2,
                    },
                },
                'p': 0.5,
            },
        },
    [('inputs', 'img_1'), ('inputs', 'img_2'), ('labels', 'change_map')]
), (
    {
            'class': Randomize,
            'args': {
                'transform': {
                    'class': TorchvisionWrapper,
                    'args': {
                        'transform_class': ColorJitter,
                        'brightness': 0.5,
                        'contrast': 0.5,
                        'saturation': 0.5,
                    },
                },
                'p': 0.5,
            },
        },
    ('inputs', 'img_1')
), (
    {
            'class': Randomize,
            'args': {
                'transform': {
                    'class': TorchvisionWrapper,
                    'args': {
                        'transform_class': ColorJitter,
                        'brightness': 0.5,
                        'contrast': 0.5,
                        'saturation': 0.5,
                    },
                },
                'p': 0.5,
            },
        },
    ('inputs', 'img_2')
)],
                },
            },
        },
    },
    'train_dataloader': {
        'class': DataLoader,
        'args': {
            'batch_size': 4,
            'num_workers': 4,
            'collate_fn': {
                'class': BaseCollator,
                'args': {
                    'collators': {},
                },
            },
        },
    },
    'criterion': {
        'class': SemanticSegmentationCriterion,
        'args': {
            'class_weights': (0.4268217980861664, 1.5731782913208008),
        },
    },
    'val_dataset': {
        'class': SYSU_CD_Dataset,
        'args': {
            'data_root': './data/datasets/soft_links/SYSU-CD',
            'split': 'val',
            'transforms_cfg': {
                'class': Compose,
                'args': {
                    'transforms': [(
    {
            'class': RandomCrop,
            'args': {
                'size': (224, 224),
                'resize': None,
                'interpolation': None,
            },
        },
    [('inputs', 'img_1'), ('inputs', 'img_2'), ('labels', 'change_map')]
)],
                },
            },
        },
    },
    'val_dataloader': {
        'class': DataLoader,
        'args': {
            'batch_size': 1,
            'num_workers': 4,
            'collate_fn': {
                'class': BaseCollator,
                'args': {
                    'collators': {},
                },
            },
        },
    },
    'test_dataset': {
        'class': SYSU_CD_Dataset,
        'args': {
            'data_root': './data/datasets/soft_links/SYSU-CD',
            'split': 'test',
            'transforms_cfg': {
                'class': Compose,
                'args': {
                    'transforms': [(
    {
            'class': RandomCrop,
            'args': {
                'size': (224, 224),
                'resize': None,
                'interpolation': None,
            },
        },
    [('inputs', 'img_1'), ('inputs', 'img_2'), ('labels', 'change_map')]
)],
                },
            },
        },
    },
    'test_dataloader': {
        'class': DataLoader,
        'args': {
            'batch_size': 1,
            'num_workers': 4,
            'collate_fn': {
                'class': BaseCollator,
                'args': {
                    'collators': {},
                },
            },
        },
    },
    'metric': {
        'class': SemanticSegmentationMetric,
        'args': {
            'num_classes': 2,
        },
    },
    'model': {
        'class': TinyCD,
        'args': {},
    },
    'optimizer': {
        'class': SingleTaskOptimizer,
        'args': {
            'optimizer_config': {
                'class': SGD,
                'args': {
                    'lr': 0.001,
                    'momentum': 0.9,
                    'weight_decay': 0.0001,
                },
            },
        },
    },
    'scheduler': {
        'class': PolynomialLR,
        'args': {
            'optimizer': None,
            'total_iters': None,
            'power': 0.9,
        },
    },
}
