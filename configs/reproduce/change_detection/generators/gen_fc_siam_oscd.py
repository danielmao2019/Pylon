from typing import List
import os
import sys
sys.path.append("../../../..")
import utils
os.chdir("../../../..")


def add_heading(config: str) -> str:
    heading = ""
    heading += "# This file is automatically generated by `./configs/reproduce/change_detection/generators/gen_fc_siam_oscd.py`.\n"
    heading += "# Please do not attempt to modify manually.\n"
    config = heading + config
    return config


def main(arch: str, bands: str) -> None:
    assert arch in {'FC-EF', 'FC-Siam-conc', 'FC-Siam-diff'}
    assert bands in {'3ch', '13ch'}
    with open(f"./configs/reproduce/change_detection/templates/fc_siam_oscd.py", mode='r') as f:
        config = f.read() + '\n'
    config = add_heading(config)
    # add dataset config
    config += f"# dataset config\n"
    config += f"config['train_dataset']['args']['bands'] = {bands}\n"
    config += f"config['val_dataset']['args']['bands'] = {bands}\n"
    config += '\n'
    # add model config
    config += f"# model config\n"
    config += f"config['model']['args']['arch'] = \"{arch}\"\n"
    config += f"config['model']['args']['in_channels'] = {int(bands[:-2]) * (2 if arch == 'FC-EF' else 1)}\n"
    config += '\n'
    # add seeds
    relpath = os.path.join("reproduce", "change_detection", "fc_siam_oscd")
    seeded_configs: List[str] = utils.automation.configs.generate_seeds(
        template_config=config, base_seed=relpath,
    )
    # save to disk
    os.makedirs(os.path.join("./configs", relpath), exist_ok=True)
    name = f"fc_siam_oscd_{arch[3:].replace('-', '_')}_{bands}"
    for idx, seeded_config in enumerate(seeded_configs):
        seeded_config += f"# work dir\n"
        seeded_config += f"config['work_dir'] = \"" + os.path.join("./logs", relpath, f"{name}_run_{idx}") + "\"\n"
        with open(os.path.join("./configs", relpath, f"{name}_run_{idx}.py"), mode='w') as f:
            f.write(seeded_config)


if __name__ == "__main__":
    import itertools
    for arch, bands in itertools.product(
        ['FC-EF', 'FC-Siam-conc', 'FC-Siam-diff'],
        ['3ch', '13ch'],
    ):
        main(arch, bands)
